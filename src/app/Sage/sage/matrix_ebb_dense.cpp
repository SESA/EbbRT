/* Generated by Cython 0.19.1 on Tue Oct 22 17:30:01 2013 */

#define PY_SSIZE_T_CLEAN
#ifndef CYTHON_USE_PYLONG_INTERNALS
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 0
#else
#include "pyconfig.h"
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 1
#else
#define CYTHON_USE_PYLONG_INTERNALS 0
#endif
#endif
#endif
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02040000
    #error Cython requires Python 2.4+.
#else
#include <stddef.h> /* For offsetof */
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define CYTHON_FORMAT_SSIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   __Pyx_PyInt_AsInt(o)
  #define PyNumber_Index(o)    ((PyNumber_Check(o) && !PyFloat_Check(o)) ? PyNumber_Int(o) : \
                                (PyErr_Format(PyExc_TypeError, \
                                              "expected index value, got %.200s", Py_TYPE(o)->tp_name), \
                                 (PyObject*)0))
  #define __Pyx_PyIndex_Check(o) (PyNumber_Check(o) && !PyFloat_Check(o) && \
                                  !PyComplex_Check(o))
  #define PyIndex_Check __Pyx_PyIndex_Check
  #define PyErr_WarnEx(category, message, stacklevel) PyErr_Warn(category, message)
  #define __PYX_BUILD_PY_SSIZE_T "i"
#else
  #define __PYX_BUILD_PY_SSIZE_T "n"
  #define CYTHON_FORMAT_SSIZE_T "z"
  #define __Pyx_PyIndex_Check PyIndex_Check
#endif
#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)
  typedef struct {
     void *buf;
     PyObject *obj;
     Py_ssize_t len;
     Py_ssize_t itemsize;
     int readonly;
     int ndim;
     char *format;
     Py_ssize_t *shape;
     Py_ssize_t *strides;
     Py_ssize_t *suboffsets;
     void *internal;
  } Py_buffer;
  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)
  #define PyBUF_RECORDS (PyBUF_STRIDES | PyBUF_FORMAT | PyBUF_WRITABLE)
  #define PyBUF_FULL (PyBUF_INDIRECT | PyBUF_FORMAT | PyBUF_WRITABLE)
  typedef int (*getbufferproc)(PyObject *, Py_buffer *, int);
  typedef void (*releasebufferproc)(PyObject *, Py_buffer *);
#endif
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#if PY_MAJOR_VERSION < 3 && PY_MINOR_VERSION < 6
  #define PyUnicode_FromString(s) PyUnicode_Decode(s, strlen(s), "UTF-8", "strict")
#endif
#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#if PY_VERSION_HEX < 0x02060000
  #define Py_TPFLAGS_HAVE_VERSION_TAG 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ? \
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((k=k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_VERSION_HEX < 0x02060000
  #define PyBytesObject                PyStringObject
  #define PyBytes_Type                 PyString_Type
  #define PyBytes_Check                PyString_Check
  #define PyBytes_CheckExact           PyString_CheckExact
  #define PyBytes_FromString           PyString_FromString
  #define PyBytes_FromStringAndSize    PyString_FromStringAndSize
  #define PyBytes_FromFormat           PyString_FromFormat
  #define PyBytes_DecodeEscape         PyString_DecodeEscape
  #define PyBytes_AsString             PyString_AsString
  #define PyBytes_AsStringAndSize      PyString_AsStringAndSize
  #define PyBytes_Size                 PyString_Size
  #define PyBytes_AS_STRING            PyString_AS_STRING
  #define PyBytes_GET_SIZE             PyString_GET_SIZE
  #define PyBytes_Repr                 PyString_Repr
  #define PyBytes_Concat               PyString_Concat
  #define PyBytes_ConcatAndDel         PyString_ConcatAndDel
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj) || \
                                         PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (Py_TYPE(obj) == &PyBaseString_Type)
#endif
#if PY_VERSION_HEX < 0x02060000
  #define PySet_Check(obj)             PyObject_TypeCheck(obj, &PySet_Type)
  #define PyFrozenSet_Check(obj)       PyObject_TypeCheck(obj, &PyFrozenSet_Type)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_VERSION_HEX < 0x03020000
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if (PY_MAJOR_VERSION < 3) || (PY_VERSION_HEX >= 0x03010300)
  #define __Pyx_PySequence_GetSlice(obj, a, b) PySequence_GetSlice(obj, a, b)
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) PySequence_SetSlice(obj, a, b, value)
  #define __Pyx_PySequence_DelSlice(obj, a, b) PySequence_DelSlice(obj, a, b)
#else
  #define __Pyx_PySequence_GetSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), (PyObject*)0) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_GetSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object is unsliceable", (obj)->ob_type->tp_name), (PyObject*)0)))
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_SetSlice(obj, a, b, value)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice assignment", (obj)->ob_type->tp_name), -1)))
  #define __Pyx_PySequence_DelSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_DelSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice deletion", (obj)->ob_type->tp_name), -1)))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER)
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  /* Initialize NaN. The sign is irrelevant, an exponent with all bits 1 and
   a nonzero mantissa means NaN. If the first bit in the mantissa is 1, it is
   a quiet NaN. */
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__matrix_ebb_dense
#define __PYX_HAVE_API__matrix_ebb_dense
#include "sage/ext/mod_int.h"
#include "string.h"
#include "stdio.h"
#include "stdsage.h"
#include "Rectangle.h"
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include "math.h"
#include "gmp.h"
#include "ntl_wrap.h"
#include "ZZ_pylong.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; /*proto*/

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromUString(s)  __Pyx_PyObject_FromString((char*)s)
#define __Pyx_PyBytes_FromUString(s)   __Pyx_PyBytes_FromString((char*)s)
#define __Pyx_PyStr_FromUString(s)     __Pyx_PyStr_FromString((char*)s)
#define __Pyx_PyUnicode_FromUString(s) __Pyx_PyUnicode_FromString((char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return u_end - u - 1;
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params() {
    PyObject* sys = NULL;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    sys = PyImport_ImportModule("sys");
    if (sys == NULL) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    if (default_encoding == NULL) goto bad;
    if (strcmp(PyBytes_AsString(default_encoding), "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        const char* default_encoding_c = PyBytes_AS_STRING(default_encoding);
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (ascii_chars_u == NULL) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (ascii_chars_b == NULL || strncmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
    }
    Py_XDECREF(sys);
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return 0;
bad:
    Py_XDECREF(sys);
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params() {
    PyObject* sys = NULL;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (sys == NULL) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    if (default_encoding == NULL) goto bad;
    default_encoding_c = PyBytes_AS_STRING(default_encoding);
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(sys);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(sys);
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


#ifdef __GNUC__
  /* Test for GCC > 2.95 */
  #if __GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95))
    #define likely(x)   __builtin_expect(!!(x), 1)
    #define unlikely(x) __builtin_expect(!!(x), 0)
  #else /* __GNUC__ > 2 ... */
    #define likely(x)   (x)
    #define unlikely(x) (x)
  #endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "matrix_ebb_dense.pyx",
  "sage_object.pxd",
  "generators.pxd",
  "category_object.pxd",
  "coerce_dict.pxd",
  "parent.pxd",
  "mutability.pxd",
  "element.pxd",
  "matrix0.pxd",
  "matrix1.pxd",
  "matrix2.pxd",
  "matrix.pxd",
  "bool.pxd",
  "complex.pxd",
  "map.pxd",
  "morphism.pxd",
  "integer.pxd",
  "parent_old.pxd",
  "parent_base.pxd",
  "parent_gens.pxd",
  "ring.pxd",
  "integer_ring.pxd",
};

/*--- Type declarations ---*/
struct __pyx_obj_4sage_9structure_11sage_object_SageObject;
struct __pyx_obj_4sage_9structure_7element_Element;
struct __pyx_obj_4sage_9structure_7element_ModuleElement;
struct __pyx_obj_4sage_9structure_7element_RingElement;
struct __pyx_obj_4sage_9structure_7element_AlgebraElement;
struct __pyx_obj_4sage_9structure_7element_Matrix;
struct __pyx_obj_4sage_6matrix_7matrix0_Matrix;
struct __pyx_obj_4sage_6matrix_7matrix1_Matrix;
struct __pyx_obj_4sage_6matrix_7matrix2_Matrix;
struct __pyx_obj_4sage_6matrix_6matrix_Matrix;
struct __pyx_obj_4sage_9structure_11coerce_dict_MonoDictEraser;
struct __pyx_obj_4sage_9structure_10generators_Generators;
struct __pyx_obj_4sage_9structure_10generators_Generators_naturals;
struct __pyx_obj_4sage_9structure_15category_object_CategoryObject;
struct __pyx_obj_4sage_9structure_6parent_Parent;
struct __pyx_obj_4sage_9structure_10parent_old_Parent;
struct __pyx_obj_4sage_9structure_11parent_base_ParentWithBase;
struct __pyx_obj_4sage_9structure_11parent_gens_ParentWithGens;
struct __pyx_obj_4sage_5rings_4ring_Ring;
struct __pyx_obj_4sage_5rings_4ring_CommutativeRing;
struct __pyx_obj_4sage_5rings_4ring_CommutativeAlgebra;
struct __pyx_obj_4sage_9structure_10generators_Generators_finite;
struct __pyx_obj_4sage_9structure_10generators_Generators_list;
struct __pyx_obj_4sage_9structure_7element_CommutativeRingElement;
struct __pyx_obj_4sage_9structure_7element_FieldElement;
struct __pyx_obj_4sage_10categories_3map_Map;
struct __pyx_obj_4sage_10categories_8morphism_Morphism;
struct __pyx_obj_4sage_5rings_7integer_int_to_Z;
struct __pyx_obj_4sage_10categories_8morphism_SetMorphism;
struct __pyx_obj_4sage_5rings_4ring_Algebra;
struct __pyx_obj_4sage_9structure_7element_MonoidElement;
struct __pyx_obj_4sage_9structure_7element_MultiplicativeGroupElement;
struct __pyx_obj_4sage_9structure_7element_AdditiveGroupElement;
struct __pyx_obj_4sage_9structure_11coerce_dict_MonoDict;
struct __pyx_obj_4sage_9structure_7element_CommutativeAlgebraElement;
struct __pyx_obj_4sage_5rings_4ring_IntegralDomain;
struct __pyx_obj_4sage_5rings_4ring_DedekindDomain;
struct __pyx_obj_4sage_9structure_7element_Vector;
struct __pyx_obj_4sage_9structure_10generators_Generators_none;
struct __pyx_obj_4sage_9structure_7element_IntegralDomainElement;
struct __pyx_obj_4sage_9structure_7element_DedekindDomainElement;
struct __pyx_obj_4sage_9structure_7element_PrincipalIdealDomainElement;
struct __pyx_obj_4sage_9structure_7element_EuclideanDomainElement;
struct __pyx_obj_16matrix_ebb_dense_PyRectangle;
struct __pyx_obj_4sage_5rings_4ring_PrincipalIdealDomain;
struct __pyx_obj_4sage_5rings_12integer_ring_IntegerRing_class;
struct __pyx_obj_4sage_5rings_7integer_Integer;
struct __pyx_obj_4sage_5rings_4ring_EuclideanDomain;
struct __pyx_obj_4sage_9structure_10mutability_Mutability;
struct __pyx_obj_4sage_9structure_7element_ElementWithCachedMethod;
struct __pyx_obj_4sage_5rings_4ring_Field;
struct __pyx_obj_4sage_10categories_3map_Section;
struct __pyx_obj_4sage_10categories_3map_FormalCompositeMap;
struct __pyx_obj_4sage_9structure_7element_CommutativeAlgebra;
struct __pyx_obj_4sage_9structure_11parent_gens_ParentWithAdditiveAbelianGens;
struct __pyx_obj_4sage_9structure_10generators_Generators_lazy_all;
struct __pyx_obj_4sage_9structure_7element_CoercionModel;
struct __pyx_obj_4sage_9structure_11coerce_dict_TripleDict;
struct __pyx_obj_4sage_9structure_11coerce_dict_TripleDictEraser;
struct __pyx_obj_4sage_9structure_7element_InfinityElement;
struct __pyx_obj_4sage_9structure_11parent_gens_ParentWithMultiplicativeAbelianGens;
struct __pyx_obj_4sage_6matrix_12matrix_dense_Matrix_dense;
struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense;
struct __pyx_opt_args_4sage_9structure_6parent_6Parent_init_coerce;
struct __pyx_opt_args_4sage_9structure_6parent_6Parent_get_action;
struct __pyx_opt_args_4sage_9structure_6parent_6Parent_discover_action;

/* "sage/structure/parent.pxd":34
 * 
 *     # Called from the __init__ method to set up coercion.
 *     cdef int init_coerce(self, bint warn=*) except -1             # <<<<<<<<<<<<<<
 * 
 *     # returns whether or not there is a Morphism from S to self
 */
struct __pyx_opt_args_4sage_9structure_6parent_6Parent_init_coerce {
  int __pyx_n;
  int warn;
};

/* "sage/structure/parent.pxd":49
 *     # returns the Action by/on self on/by S
 *     # corresponding to op and self_on_left
 *     cpdef get_action(self, S, op=*, bint self_on_left=*, self_el=*, S_el=*)             # <<<<<<<<<<<<<<
 *     cpdef _get_action_(self, S, op, bint self_on_left)
 * 
 */
struct __pyx_opt_args_4sage_9structure_6parent_6Parent_get_action {
  int __pyx_n;
  PyObject *op;
  int self_on_left;
  PyObject *self_el;
  PyObject *S_el;
};

/* "sage/structure/parent.pxd":63
 *     cdef discover_coerce_map_from(self, S)
 *     cdef discover_convert_map_from(self, S)
 *     cdef discover_action(self, S, op, bint self_on_left, self_el=*, S_el=*)             # <<<<<<<<<<<<<<
 * 
 *     # List consisting of Morphisms (from anything to self)
 */
struct __pyx_opt_args_4sage_9structure_6parent_6Parent_discover_action {
  int __pyx_n;
  PyObject *self_el;
  PyObject *S_el;
};
struct __pyx_opt_args_4sage_6matrix_7matrix2_6Matrix_matrix_window;

/* "matrix2.pxd":18
 * 
 *     cdef _det_by_minors(self, Py_ssize_t level)
 *     cpdef matrix_window(self, Py_ssize_t row=*, Py_ssize_t col=*, Py_ssize_t nrows=*, Py_ssize_t ncols=*, bint check=*)             # <<<<<<<<<<<<<<
 */
struct __pyx_opt_args_4sage_6matrix_7matrix2_6Matrix_matrix_window {
  int __pyx_n;
  Py_ssize_t row;
  Py_ssize_t col;
  Py_ssize_t nrows;
  Py_ssize_t ncols;
  int check;
};
struct __pyx_opt_args_4sage_10categories_3map_3Map__call_with_args;

/* "map.pxd":16
 *     # these methods require x is an element of domain, and returns an element with parent codomain
 *     cpdef Element _call_(self, x)
 *     cpdef Element _call_with_args(self, x, args=*, kwds=*)             # <<<<<<<<<<<<<<
 * 
 *     cpdef domain(self)
 */
struct __pyx_opt_args_4sage_10categories_3map_3Map__call_with_args {
  int __pyx_n;
  PyObject *args;
  PyObject *kwds;
};
struct __pyx_opt_args_16matrix_ebb_dense_16Matrix_ebb_dense__export_as_string;

/* "matrix_ebb_dense.pxd":9
 *     cdef _pickle_version0(self)
 *     cdef _unpickle_version0(self, data)
 *     cpdef _export_as_string(self, int base=?)             # <<<<<<<<<<<<<<
 * 
 */
struct __pyx_opt_args_16matrix_ebb_dense_16Matrix_ebb_dense__export_as_string {
  int __pyx_n;
  int base;
};

/* "sage/structure/sage_object.pxd":1
 * cdef class SageObject:             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_9structure_11sage_object_SageObject {
  PyObject_HEAD
};


/* "sage/structure/element.pxd":12
 * import  sage_object
 * 
 * cdef class Element(sage_object.SageObject):             # <<<<<<<<<<<<<<
 *     cdef Parent _parent
 *     cdef _richcmp_c_impl(left, Element right, int op)
 */
struct __pyx_obj_4sage_9structure_7element_Element {
  struct __pyx_obj_4sage_9structure_11sage_object_SageObject __pyx_base;
  struct __pyx_vtabstruct_4sage_9structure_7element_Element *__pyx_vtab;
  struct __pyx_obj_4sage_9structure_6parent_Parent *_parent;
};


/* "sage/structure/element.pxd":29
 *     cdef public dict __cached_methods
 * 
 * cdef class ModuleElement(Element)       # forward declaration             # <<<<<<<<<<<<<<
 * 
 * cdef class RingElement(ModuleElement)   # forward declaration
 */
struct __pyx_obj_4sage_9structure_7element_ModuleElement {
  struct __pyx_obj_4sage_9structure_7element_Element __pyx_base;
};


/* "sage/structure/element.pxd":31
 * cdef class ModuleElement(Element)       # forward declaration
 * 
 * cdef class RingElement(ModuleElement)   # forward declaration             # <<<<<<<<<<<<<<
 * 
 * cdef class ModuleElement(Element):
 */
struct __pyx_obj_4sage_9structure_7element_RingElement {
  struct __pyx_obj_4sage_9structure_7element_ModuleElement __pyx_base;
};


/* "sage/structure/element.pxd":91
 *     pass
 * 
 * cdef class AlgebraElement(RingElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_9structure_7element_AlgebraElement {
  struct __pyx_obj_4sage_9structure_7element_RingElement __pyx_base;
};


/* "sage/structure/element.pxd":116
 * 
 * 
 * cdef class Matrix(AlgebraElement):             # <<<<<<<<<<<<<<
 *     # All matrix classes must be written in Cython
 *     cdef Py_ssize_t _nrows
 */
struct __pyx_obj_4sage_9structure_7element_Matrix {
  struct __pyx_obj_4sage_9structure_7element_AlgebraElement __pyx_base;
  Py_ssize_t _nrows;
  Py_ssize_t _ncols;
};


/* "matrix0.pxd":16
 * cimport sage.structure.mutability
 * 
 * cdef class Matrix(sage.structure.element.Matrix):             # <<<<<<<<<<<<<<
 *     # Properties of any matrix  (plus _parent, inherited from base class)
 *     cdef public object _cache
 */
struct __pyx_obj_4sage_6matrix_7matrix0_Matrix {
  struct __pyx_obj_4sage_9structure_7element_Matrix __pyx_base;
  PyObject *_cache;
  PyObject *_subdivisions;
  PyObject *_base_ring;
  int _is_immutable;
};


/* "matrix1.pxd":3
 * cimport matrix0
 * 
 * cdef class Matrix(matrix0.Matrix):             # <<<<<<<<<<<<<<
 *     pass
 */
struct __pyx_obj_4sage_6matrix_7matrix1_Matrix {
  struct __pyx_obj_4sage_6matrix_7matrix0_Matrix __pyx_base;
};


/* "matrix2.pxd":15
 * cimport matrix1
 * 
 * cdef class Matrix(matrix1.Matrix):             # <<<<<<<<<<<<<<
 * 
 *     cdef _det_by_minors(self, Py_ssize_t level)
 */
struct __pyx_obj_4sage_6matrix_7matrix2_Matrix {
  struct __pyx_obj_4sage_6matrix_7matrix1_Matrix __pyx_base;
};

struct __pyx_obj_4sage_6matrix_6matrix_Matrix {
  struct __pyx_obj_4sage_6matrix_7matrix2_Matrix __pyx_base;
};


/* "sage/structure/coerce_dict.pxd":11
 *     cdef set(self, object k, value)
 * 
 * cdef class MonoDictEraser:             # <<<<<<<<<<<<<<
 *     cdef object D
 * 
 */
struct __pyx_obj_4sage_9structure_11coerce_dict_MonoDictEraser {
  PyObject_HEAD
  PyObject *D;
};


/* "sage/structure/generators.pxd":3
 * from sage.structure.sage_object cimport SageObject
 * 
 * cdef class Generators(SageObject):             # <<<<<<<<<<<<<<
 * 
 *     cdef readonly _obj
 */
struct __pyx_obj_4sage_9structure_10generators_Generators {
  struct __pyx_obj_4sage_9structure_11sage_object_SageObject __pyx_base;
  struct __pyx_vtabstruct_4sage_9structure_10generators_Generators *__pyx_vtab;
  PyObject *_obj;
  PyObject *_index_set;
  PyObject *_category;
};


/* "sage/structure/generators.pxd":22
 *     cdef _List
 * 
 * cdef class Generators_naturals(Generators):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_9structure_10generators_Generators_naturals {
  struct __pyx_obj_4sage_9structure_10generators_Generators __pyx_base;
};


/* "sage/structure/category_object.pxd":19
 * cpdef inline check_default_category(default_category, category)
 * 
 * cdef class CategoryObject(sage_object.SageObject):             # <<<<<<<<<<<<<<
 * 
 *     cdef _generators
 */
struct __pyx_obj_4sage_9structure_15category_object_CategoryObject {
  struct __pyx_obj_4sage_9structure_11sage_object_SageObject __pyx_base;
  PyObject *_generators;
  PyObject *_category;
  PyObject *_base;
  PyObject *_cdata;
  PyObject *_names;
  PyObject *_factory_data;
  PyObject *__weakref__;
  long _hash_value;
};


/* "sage/structure/parent.pxd":12
 * from sage.structure.coerce_dict cimport MonoDict, TripleDict
 * 
 * cdef class Parent(category_object.CategoryObject):             # <<<<<<<<<<<<<<
 * 
 *     cdef public _element_constructor
 */
struct __pyx_obj_4sage_9structure_6parent_Parent {
  struct __pyx_obj_4sage_9structure_15category_object_CategoryObject __pyx_base;
  struct __pyx_vtabstruct_4sage_9structure_6parent_Parent *__pyx_vtab;
  PyObject *_element_constructor;
  PyObject *_convert_method_name;
  int _element_init_pass_parent;
  PyObject *__cached_methods;
  PyObject *_initial_coerce_list;
  PyObject *_initial_action_list;
  PyObject *_initial_convert_list;
  int _coercions_used;
  PyObject *__an_element;
  PyObject *_coerce_from_list;
  struct __pyx_obj_4sage_9structure_11coerce_dict_MonoDict *_coerce_from_hash;
  PyObject *_action_list;
  struct __pyx_obj_4sage_9structure_11coerce_dict_TripleDict *_action_hash;
  PyObject *_convert_from_list;
  struct __pyx_obj_4sage_9structure_11coerce_dict_MonoDict *_convert_from_hash;
  PyObject *_embedding;
};


/* "parent_old.pxd":11
 * cimport parent
 * from sage.structure.coerce_dict cimport MonoDict
 * cdef class Parent(parent.Parent):             # <<<<<<<<<<<<<<
 * 
 *     # returns a Morphism from S to self, or None
 */
struct __pyx_obj_4sage_9structure_10parent_old_Parent {
  struct __pyx_obj_4sage_9structure_6parent_Parent __pyx_base;
  struct __pyx_obj_4sage_9structure_11coerce_dict_MonoDict *_has_coerce_map_from;
};

struct __pyx_obj_4sage_9structure_11parent_base_ParentWithBase {
  struct __pyx_obj_4sage_9structure_10parent_old_Parent __pyx_base;
};


/* "sage/structure/parent_gens.pxd":15
 * cimport parent_base
 * 
 * cdef class ParentWithGens(parent_base.ParentWithBase):             # <<<<<<<<<<<<<<
 *     cdef public object _gens
 *     cdef public object _gens_dict
 */
struct __pyx_obj_4sage_9structure_11parent_gens_ParentWithGens {
  struct __pyx_obj_4sage_9structure_11parent_base_ParentWithBase __pyx_base;
  PyObject *_gens;
  PyObject *_gens_dict;
  PyObject *_latex_names;
  PyObject *_list;
};


/* "ring.pxd":5
 * cpdef bint _is_Field(x) except -2
 * 
 * cdef class Ring(ParentWithGens):             # <<<<<<<<<<<<<<
 *     cdef public object _zero_element
 *     cdef public object _one_element
 */
struct __pyx_obj_4sage_5rings_4ring_Ring {
  struct __pyx_obj_4sage_9structure_11parent_gens_ParentWithGens __pyx_base;
  PyObject *_zero_element;
  PyObject *_one_element;
  PyObject *_zero_ideal;
  PyObject *_unit_ideal;
  PyObject *__ideal_monoid;
};


/* "ring.pxd":13
 *     cdef _an_element_c_impl(self)
 * 
 * cdef class CommutativeRing(Ring):             # <<<<<<<<<<<<<<
 *     cdef public object __fraction_field
 * 
 */
struct __pyx_obj_4sage_5rings_4ring_CommutativeRing {
  struct __pyx_obj_4sage_5rings_4ring_Ring __pyx_base;
  PyObject *__fraction_field;
};


/* "ring.pxd":35
 *     pass
 * 
 * cdef class CommutativeAlgebra(CommutativeRing):             # <<<<<<<<<<<<<<
 *     pass
 */
struct __pyx_obj_4sage_5rings_4ring_CommutativeAlgebra {
  struct __pyx_obj_4sage_5rings_4ring_CommutativeRing __pyx_base;
};


/* "sage/structure/generators.pxd":16
 *     cpdef list(self)
 * 
 * cdef class Generators_finite(Generators):             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t _n
 * 
 */
struct __pyx_obj_4sage_9structure_10generators_Generators_finite {
  struct __pyx_obj_4sage_9structure_10generators_Generators __pyx_base;
  Py_ssize_t _n;
};


/* "sage/structure/generators.pxd":19
 *     cdef Py_ssize_t _n
 * 
 * cdef class Generators_list(Generators_finite):             # <<<<<<<<<<<<<<
 *     cdef _List
 * 
 */
struct __pyx_obj_4sage_9structure_10generators_Generators_list {
  struct __pyx_obj_4sage_9structure_10generators_Generators_finite __pyx_base;
  PyObject *_List;
};


/* "sage/structure/element.pxd":73
 *     cdef RingElement _add_long(self, long n)
 * 
 * cdef class CommutativeRingElement(RingElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_9structure_7element_CommutativeRingElement {
  struct __pyx_obj_4sage_9structure_7element_RingElement __pyx_base;
};


/* "sage/structure/element.pxd":88
 *     pass
 * 
 * cdef class FieldElement(CommutativeRingElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_9structure_7element_FieldElement {
  struct __pyx_obj_4sage_9structure_7element_CommutativeRingElement __pyx_base;
};


/* "map.pxd":4
 * from sage.structure.element cimport Element
 * 
 * cdef class Map(Element):             # <<<<<<<<<<<<<<
 *     cdef Parent _domain
 *     cdef Parent _codomain
 */
struct __pyx_obj_4sage_10categories_3map_Map {
  struct __pyx_obj_4sage_9structure_7element_Element __pyx_base;
  struct __pyx_obj_4sage_9structure_6parent_Parent *_domain;
  struct __pyx_obj_4sage_9structure_6parent_Parent *_codomain;
  int _coerce_cost;
  PyObject *_repr_type_str;
};


/* "sage/categories/morphism.pxd":5
 * from map cimport Map
 * 
 * cdef class Morphism(Map):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_10categories_8morphism_Morphism {
  struct __pyx_obj_4sage_10categories_3map_Map __pyx_base;
};


/* "sage/rings/integer.pxd":35
 * cdef Integer smallInteger(long value)
 * 
 * cdef class int_to_Z(Morphism):             # <<<<<<<<<<<<<<
 *     pass
 */
struct __pyx_obj_4sage_5rings_7integer_int_to_Z {
  struct __pyx_obj_4sage_10categories_8morphism_Morphism __pyx_base;
};


/* "sage/categories/morphism.pxd":8
 *     pass
 * 
 * cdef class SetMorphism(Morphism):             # <<<<<<<<<<<<<<
 *     cdef object _function
 *     cpdef bint _eq_c_impl(left, Element right)
 */
struct __pyx_obj_4sage_10categories_8morphism_SetMorphism {
  struct __pyx_obj_4sage_10categories_8morphism_Morphism __pyx_base;
  PyObject *_function;
};


/* "ring.pxd":32
 *     pass
 * 
 * cdef class Algebra(Ring):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_5rings_4ring_Algebra {
  struct __pyx_obj_4sage_5rings_4ring_Ring __pyx_base;
};


/* "sage/structure/element.pxd":53
 *     cdef RingElement coerce_to_base_ring(self, x)
 * 
 * cdef class MonoidElement(Element):             # <<<<<<<<<<<<<<
 *     cpdef MonoidElement _mul_(self, MonoidElement right)
 * 
 */
struct __pyx_obj_4sage_9structure_7element_MonoidElement {
  struct __pyx_obj_4sage_9structure_7element_Element __pyx_base;
};


/* "sage/structure/element.pxd":56
 *     cpdef MonoidElement _mul_(self, MonoidElement right)
 * 
 * cdef class MultiplicativeGroupElement(MonoidElement):             # <<<<<<<<<<<<<<
 *     cpdef MultiplicativeGroupElement _div_(self, MultiplicativeGroupElement right)
 * 
 */
struct __pyx_obj_4sage_9structure_7element_MultiplicativeGroupElement {
  struct __pyx_obj_4sage_9structure_7element_MonoidElement __pyx_base;
};


/* "sage/structure/element.pxd":60
 * 
 * 
 * cdef class AdditiveGroupElement(ModuleElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_9structure_7element_AdditiveGroupElement {
  struct __pyx_obj_4sage_9structure_7element_ModuleElement __pyx_base;
};


/* "sage/structure/coerce_dict.pxd":1
 * cdef class MonoDict:             # <<<<<<<<<<<<<<
 *     cdef __weakref__
 *     cdef Py_ssize_t _size
 */
struct __pyx_obj_4sage_9structure_11coerce_dict_MonoDict {
  PyObject_HEAD
  struct __pyx_vtabstruct_4sage_9structure_11coerce_dict_MonoDict *__pyx_vtab;
  PyObject *__weakref__;
  Py_ssize_t _size;
  PyObject *buckets;
  int weak_values;
  double threshold;
  struct __pyx_obj_4sage_9structure_11coerce_dict_MonoDictEraser *eraser;
};


/* "sage/structure/element.pxd":94
 *     pass
 * 
 * cdef class CommutativeAlgebraElement(CommutativeRingElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_9structure_7element_CommutativeAlgebraElement {
  struct __pyx_obj_4sage_9structure_7element_CommutativeRingElement __pyx_base;
};


/* "ring.pxd":16
 *     cdef public object __fraction_field
 * 
 * cdef class IntegralDomain(CommutativeRing):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_5rings_4ring_IntegralDomain {
  struct __pyx_obj_4sage_5rings_4ring_CommutativeRing __pyx_base;
};


/* "ring.pxd":19
 *     pass
 * 
 * cdef class DedekindDomain(IntegralDomain):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_5rings_4ring_DedekindDomain {
  struct __pyx_obj_4sage_5rings_4ring_IntegralDomain __pyx_base;
};


/* "sage/structure/element.pxd":104
 * 
 * 
 * cdef class Vector(ModuleElement):             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t _degree
 * 
 */
struct __pyx_obj_4sage_9structure_7element_Vector {
  struct __pyx_obj_4sage_9structure_7element_ModuleElement __pyx_base;
  Py_ssize_t _degree;
};


/* "sage/structure/generators.pxd":25
 *     pass
 * 
 * cdef class Generators_none(Generators):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_9structure_10generators_Generators_none {
  struct __pyx_obj_4sage_9structure_10generators_Generators __pyx_base;
};


/* "sage/structure/element.pxd":76
 *     pass
 * 
 * cdef class IntegralDomainElement(CommutativeRingElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_9structure_7element_IntegralDomainElement {
  struct __pyx_obj_4sage_9structure_7element_CommutativeRingElement __pyx_base;
};


/* "sage/structure/element.pxd":79
 *     pass
 * 
 * cdef class DedekindDomainElement(IntegralDomainElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_9structure_7element_DedekindDomainElement {
  struct __pyx_obj_4sage_9structure_7element_IntegralDomainElement __pyx_base;
};


/* "sage/structure/element.pxd":82
 *     pass
 * 
 * cdef class PrincipalIdealDomainElement(DedekindDomainElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_9structure_7element_PrincipalIdealDomainElement {
  struct __pyx_obj_4sage_9structure_7element_DedekindDomainElement __pyx_base;
};


/* "sage/structure/element.pxd":85
 *     pass
 * 
 * cdef class EuclideanDomainElement(PrincipalIdealDomainElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_9structure_7element_EuclideanDomainElement {
  struct __pyx_obj_4sage_9structure_7element_PrincipalIdealDomainElement __pyx_base;
};


/* "matrix_ebb_dense.pyx":13
 *         void move(int, int)
 * 
 * cdef class PyRectangle:             # <<<<<<<<<<<<<<
 *     cdef Rectangle *thisptr      # hold a C++ instance which we're wrapping
 *     def __cinit__(self, int x0, int y0, int x1, int y1):
 */
struct __pyx_obj_16matrix_ebb_dense_PyRectangle {
  PyObject_HEAD
  shapes::Rectangle *thisptr;
};


/* "ring.pxd":23
 * 
 * 
 * cdef class PrincipalIdealDomain(IntegralDomain):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_5rings_4ring_PrincipalIdealDomain {
  struct __pyx_obj_4sage_5rings_4ring_IntegralDomain __pyx_base;
};


/* "sage/rings/integer_ring.pxd":7
 * from integer cimport Integer
 * 
 * cdef class IntegerRing_class(PrincipalIdealDomain):             # <<<<<<<<<<<<<<
 *     cdef Integer _coerce_ZZ(self, ZZ_c *z)
 *     cdef int _randomize_mpz(self, mpz_t value, x, y, distribution) except -1
 */
struct __pyx_obj_4sage_5rings_12integer_ring_IntegerRing_class {
  struct __pyx_obj_4sage_5rings_4ring_PrincipalIdealDomain __pyx_base;
  PyObject *_zero;
};


/* "sage/rings/integer.pxd":9
 * from sage.categories.morphism cimport Morphism
 * 
 * cdef class Integer(EuclideanDomainElement):             # <<<<<<<<<<<<<<
 *     cdef mpz_t value
 * 
 */
struct __pyx_obj_4sage_5rings_7integer_Integer {
  struct __pyx_obj_4sage_9structure_7element_EuclideanDomainElement __pyx_base;
  mpz_t value;
};


/* "ring.pxd":26
 *     pass
 * 
 * cdef class EuclideanDomain(PrincipalIdealDomain):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_5rings_4ring_EuclideanDomain {
  struct __pyx_obj_4sage_5rings_4ring_PrincipalIdealDomain __pyx_base;
};


/* "sage/structure/mutability.pxd":15
 * ##########################################################################
 * 
 * cdef class Mutability:             # <<<<<<<<<<<<<<
 *     cdef public bint _is_immutable
 *     cdef _require_mutable_cdef(self)
 */
struct __pyx_obj_4sage_9structure_10mutability_Mutability {
  PyObject_HEAD
  struct __pyx_vtabstruct_4sage_9structure_10mutability_Mutability *__pyx_vtab;
  int _is_immutable;
};


/* "sage/structure/element.pxd":26
 *     cpdef _acted_upon_(self, x, bint self_on_left)
 * 
 * cdef class ElementWithCachedMethod(Element):             # <<<<<<<<<<<<<<
 *     cdef public dict __cached_methods
 * 
 */
struct __pyx_obj_4sage_9structure_7element_ElementWithCachedMethod {
  struct __pyx_obj_4sage_9structure_7element_Element __pyx_base;
  PyObject *__cached_methods;
};


/* "ring.pxd":29
 *     pass
 * 
 * cdef class Field(PrincipalIdealDomain):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_5rings_4ring_Field {
  struct __pyx_obj_4sage_5rings_4ring_PrincipalIdealDomain __pyx_base;
};


/* "map.pxd":24
 * 
 * 
 * cdef class Section(Map):             # <<<<<<<<<<<<<<
 *     cdef Map _inverse
 * 
 */
struct __pyx_obj_4sage_10categories_3map_Section {
  struct __pyx_obj_4sage_10categories_3map_Map __pyx_base;
  struct __pyx_obj_4sage_10categories_3map_Map *_inverse;
};


/* "map.pxd":27
 *     cdef Map _inverse
 * 
 * cdef class FormalCompositeMap(Map):             # <<<<<<<<<<<<<<
 *     cdef Map __first
 *     cdef Map __second
 */
struct __pyx_obj_4sage_10categories_3map_FormalCompositeMap {
  struct __pyx_obj_4sage_10categories_3map_Map __pyx_base;
  struct __pyx_obj_4sage_10categories_3map_Map *__pyx___first;
  struct __pyx_obj_4sage_10categories_3map_Map *__pyx___second;
};


/* "sage/structure/element.pxd":97
 *     pass
 * 
 * cdef class CommutativeAlgebra(AlgebraElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_9structure_7element_CommutativeAlgebra {
  struct __pyx_obj_4sage_9structure_7element_AlgebraElement __pyx_base;
};


/* "sage/structure/parent_gens.pxd":25
 *     cdef public object _generator_orders
 * 
 * cdef class ParentWithAdditiveAbelianGens(ParentWithGens):             # <<<<<<<<<<<<<<
 *     cdef public object _generator_orders
 */
struct __pyx_obj_4sage_9structure_11parent_gens_ParentWithAdditiveAbelianGens {
  struct __pyx_obj_4sage_9structure_11parent_gens_ParentWithGens __pyx_base;
  PyObject *_generator_orders;
};


/* "sage/structure/generators.pxd":28
 *     pass
 * 
 * cdef class Generators_lazy_all(Generators):             # <<<<<<<<<<<<<<
 *     cdef _f
 *     cdef int _compute_gens(self) except -1
 */
struct __pyx_obj_4sage_9structure_10generators_Generators_lazy_all {
  struct __pyx_obj_4sage_9structure_10generators_Generators __pyx_base;
  PyObject *_f;
};


/* "sage/structure/element.pxd":131
 * 
 * 
 * cdef class CoercionModel:             # <<<<<<<<<<<<<<
 *     cpdef canonical_coercion(self, x, y)
 *     cpdef bin_op(self, x, y, op)
 */
struct __pyx_obj_4sage_9structure_7element_CoercionModel {
  PyObject_HEAD
  struct __pyx_vtabstruct_4sage_9structure_7element_CoercionModel *__pyx_vtab;
};


/* "sage/structure/coerce_dict.pxd":14
 *     cdef object D
 * 
 * cdef class TripleDict:             # <<<<<<<<<<<<<<
 *     cdef __weakref__
 *     cdef Py_ssize_t _size
 */
struct __pyx_obj_4sage_9structure_11coerce_dict_TripleDict {
  PyObject_HEAD
  struct __pyx_vtabstruct_4sage_9structure_11coerce_dict_TripleDict *__pyx_vtab;
  PyObject *__weakref__;
  Py_ssize_t _size;
  PyObject *buckets;
  int weak_values;
  double threshold;
  struct __pyx_obj_4sage_9structure_11coerce_dict_TripleDictEraser *eraser;
};


/* "sage/structure/coerce_dict.pxd":24
 *     cdef set(self, object k1, object k2, object k3, value)
 * 
 * cdef class TripleDictEraser:             # <<<<<<<<<<<<<<
 *     cdef object D
 * 
 */
struct __pyx_obj_4sage_9structure_11coerce_dict_TripleDictEraser {
  PyObject_HEAD
  PyObject *D;
};


/* "sage/structure/element.pxd":100
 *     pass
 * 
 * cdef class InfinityElement(RingElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_4sage_9structure_7element_InfinityElement {
  struct __pyx_obj_4sage_9structure_7element_RingElement __pyx_base;
};


/* "sage/structure/parent_gens.pxd":22
 * 
 * 
 * cdef class ParentWithMultiplicativeAbelianGens(ParentWithGens):             # <<<<<<<<<<<<<<
 *     cdef public object _generator_orders
 * 
 */
struct __pyx_obj_4sage_9structure_11parent_gens_ParentWithMultiplicativeAbelianGens {
  struct __pyx_obj_4sage_9structure_11parent_gens_ParentWithGens __pyx_base;
  PyObject *_generator_orders;
};


/* "sage/matrix/matrix_dense.pxd":3
 * cimport matrix
 * 
 * cdef class Matrix_dense(matrix.Matrix):             # <<<<<<<<<<<<<<
 *     cdef set_unsafe_int(self, Py_ssize_t i, Py_ssize_t j, int value)
 * 
 */
struct __pyx_obj_4sage_6matrix_12matrix_dense_Matrix_dense {
  struct __pyx_obj_4sage_6matrix_6matrix_Matrix __pyx_base;
};


/* "matrix_ebb_dense.pxd":4
 * from sage.matrix.matrix_dense cimport Matrix_dense
 * 
 * cdef class Matrix_ebb_dense(Matrix_dense):             # <<<<<<<<<<<<<<
 *     cdef _zero_out_matrix(self)
 *     cdef _new_unitialized_matrix(self, Py_ssize_t nrows, Py_ssize_t ncols)
 */
struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense {
  struct __pyx_obj_4sage_6matrix_12matrix_dense_Matrix_dense __pyx_base;
};



/* "sage/structure/element.pxd":12
 * import  sage_object
 * 
 * cdef class Element(sage_object.SageObject):             # <<<<<<<<<<<<<<
 *     cdef Parent _parent
 *     cdef _richcmp_c_impl(left, Element right, int op)
 */

struct __pyx_vtabstruct_4sage_9structure_7element_Element {
  PyObject *(*_richcmp_c_impl)(struct __pyx_obj_4sage_9structure_7element_Element *, struct __pyx_obj_4sage_9structure_7element_Element *, int);
  int (*_cmp_c_impl)(struct __pyx_obj_4sage_9structure_7element_Element *, struct __pyx_obj_4sage_9structure_7element_Element *);
  PyObject *(*_richcmp)(struct __pyx_obj_4sage_9structure_7element_Element *, PyObject *, int);
  PyObject *(*_cmp)(struct __pyx_obj_4sage_9structure_7element_Element *, PyObject *);
  PyObject *(*_set_parent_c)(struct __pyx_obj_4sage_9structure_7element_Element *, struct __pyx_obj_4sage_9structure_6parent_Parent *);
  PyObject *(*base_extend_c)(struct __pyx_obj_4sage_9structure_7element_Element *, struct __pyx_obj_4sage_9structure_6parent_Parent *);
  PyObject *(*base_extend_c_impl)(struct __pyx_obj_4sage_9structure_7element_Element *, struct __pyx_obj_4sage_9structure_6parent_Parent *);
  PyObject *(*_rich_to_bool)(struct __pyx_obj_4sage_9structure_7element_Element *, int, int);
  PyObject *(*_act_on_)(struct __pyx_obj_4sage_9structure_7element_Element *, PyObject *, int, int __pyx_skip_dispatch);
  PyObject *(*_acted_upon_)(struct __pyx_obj_4sage_9structure_7element_Element *, PyObject *, int, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_4sage_9structure_7element_Element *__pyx_vtabptr_4sage_9structure_7element_Element;


/* "sage/structure/element.pxd":29
 *     cdef public dict __cached_methods
 * 
 * cdef class ModuleElement(Element)       # forward declaration             # <<<<<<<<<<<<<<
 * 
 * cdef class RingElement(ModuleElement)   # forward declaration
 */

struct __pyx_vtabstruct_4sage_9structure_7element_ModuleElement {
  struct __pyx_vtabstruct_4sage_9structure_7element_Element __pyx_base;
  struct __pyx_obj_4sage_9structure_7element_ModuleElement *(*_add_)(struct __pyx_obj_4sage_9structure_7element_ModuleElement *, struct __pyx_obj_4sage_9structure_7element_ModuleElement *, int __pyx_skip_dispatch);
  struct __pyx_obj_4sage_9structure_7element_ModuleElement *(*_sub_)(struct __pyx_obj_4sage_9structure_7element_ModuleElement *, struct __pyx_obj_4sage_9structure_7element_ModuleElement *, int __pyx_skip_dispatch);
  struct __pyx_obj_4sage_9structure_7element_ModuleElement *(*_neg_)(struct __pyx_obj_4sage_9structure_7element_ModuleElement *, int __pyx_skip_dispatch);
  struct __pyx_obj_4sage_9structure_7element_ModuleElement *(*_lmul_)(struct __pyx_obj_4sage_9structure_7element_ModuleElement *, struct __pyx_obj_4sage_9structure_7element_RingElement *, int __pyx_skip_dispatch);
  struct __pyx_obj_4sage_9structure_7element_ModuleElement *(*_rmul_)(struct __pyx_obj_4sage_9structure_7element_ModuleElement *, struct __pyx_obj_4sage_9structure_7element_RingElement *, int __pyx_skip_dispatch);
  struct __pyx_obj_4sage_9structure_7element_ModuleElement *(*_mul_long)(struct __pyx_obj_4sage_9structure_7element_ModuleElement *, long);
  struct __pyx_obj_4sage_9structure_7element_ModuleElement *(*_iadd_)(struct __pyx_obj_4sage_9structure_7element_ModuleElement *, struct __pyx_obj_4sage_9structure_7element_ModuleElement *, int __pyx_skip_dispatch);
  struct __pyx_obj_4sage_9structure_7element_ModuleElement *(*_isub_)(struct __pyx_obj_4sage_9structure_7element_ModuleElement *, struct __pyx_obj_4sage_9structure_7element_ModuleElement *, int __pyx_skip_dispatch);
  struct __pyx_obj_4sage_9structure_7element_ModuleElement *(*_ilmul_)(struct __pyx_obj_4sage_9structure_7element_ModuleElement *, struct __pyx_obj_4sage_9structure_7element_RingElement *, int __pyx_skip_dispatch);
  struct __pyx_obj_4sage_9structure_7element_RingElement *(*coerce_to_base_ring)(struct __pyx_obj_4sage_9structure_7element_ModuleElement *, PyObject *);
};
static struct __pyx_vtabstruct_4sage_9structure_7element_ModuleElement *__pyx_vtabptr_4sage_9structure_7element_ModuleElement;


/* "sage/structure/element.pxd":31
 * cdef class ModuleElement(Element)       # forward declaration
 * 
 * cdef class RingElement(ModuleElement)   # forward declaration             # <<<<<<<<<<<<<<
 * 
 * cdef class ModuleElement(Element):
 */

struct __pyx_vtabstruct_4sage_9structure_7element_RingElement {
  struct __pyx_vtabstruct_4sage_9structure_7element_ModuleElement __pyx_base;
  struct __pyx_obj_4sage_9structure_7element_RingElement *(*_mul_)(struct __pyx_obj_4sage_9structure_7element_RingElement *, struct __pyx_obj_4sage_9structure_7element_RingElement *, int __pyx_skip_dispatch);
  struct __pyx_obj_4sage_9structure_7element_RingElement *(*_div_)(struct __pyx_obj_4sage_9structure_7element_RingElement *, struct __pyx_obj_4sage_9structure_7element_RingElement *, int __pyx_skip_dispatch);
  struct __pyx_obj_4sage_9structure_7element_RingElement *(*_imul_)(struct __pyx_obj_4sage_9structure_7element_RingElement *, struct __pyx_obj_4sage_9structure_7element_RingElement *, int __pyx_skip_dispatch);
  struct __pyx_obj_4sage_9structure_7element_RingElement *(*_idiv_)(struct __pyx_obj_4sage_9structure_7element_RingElement *, struct __pyx_obj_4sage_9structure_7element_RingElement *, int __pyx_skip_dispatch);
  struct __pyx_obj_4sage_9structure_7element_RingElement *(*_add_long)(struct __pyx_obj_4sage_9structure_7element_RingElement *, long);
};
static struct __pyx_vtabstruct_4sage_9structure_7element_RingElement *__pyx_vtabptr_4sage_9structure_7element_RingElement;


/* "sage/structure/element.pxd":100
 *     pass
 * 
 * cdef class InfinityElement(RingElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_7element_InfinityElement {
  struct __pyx_vtabstruct_4sage_9structure_7element_RingElement __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_7element_InfinityElement *__pyx_vtabptr_4sage_9structure_7element_InfinityElement;


/* "sage/structure/parent.pxd":12
 * from sage.structure.coerce_dict cimport MonoDict, TripleDict
 * 
 * cdef class Parent(category_object.CategoryObject):             # <<<<<<<<<<<<<<
 * 
 *     cdef public _element_constructor
 */

struct __pyx_vtabstruct_4sage_9structure_6parent_Parent {
  int (*is_coercion_cached)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, int __pyx_skip_dispatch);
  int (*is_conversion_cached)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*register_coercion)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*register_action)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*register_conversion)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*register_embedding)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, int __pyx_skip_dispatch);
  int (*_richcmp_helper)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, int, int __pyx_skip_dispatch);
  int (*is_exact)(struct __pyx_obj_4sage_9structure_6parent_Parent *, int __pyx_skip_dispatch);
  int (*init_coerce)(struct __pyx_obj_4sage_9structure_6parent_Parent *, struct __pyx_opt_args_4sage_9structure_6parent_6Parent_init_coerce *__pyx_optional_args);
  int (*has_coerce_map_from)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*coerce_map_from)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*_coerce_map_from_)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*convert_map_from)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*_convert_map_from_)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*get_action)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_4sage_9structure_6parent_6Parent_get_action *__pyx_optional_args);
  PyObject *(*_get_action_)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, PyObject *, int, int __pyx_skip_dispatch);
  PyObject *(*coerce)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*an_element)(struct __pyx_obj_4sage_9structure_6parent_Parent *, int __pyx_skip_dispatch);
  PyObject *(*_generic_convert_map)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*discover_coerce_map_from)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *);
  PyObject *(*discover_convert_map_from)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *);
  PyObject *(*discover_action)(struct __pyx_obj_4sage_9structure_6parent_Parent *, PyObject *, PyObject *, int, struct __pyx_opt_args_4sage_9structure_6parent_6Parent_discover_action *__pyx_optional_args);
};
static struct __pyx_vtabstruct_4sage_9structure_6parent_Parent *__pyx_vtabptr_4sage_9structure_6parent_Parent;


/* "parent_old.pxd":11
 * cimport parent
 * from sage.structure.coerce_dict cimport MonoDict
 * cdef class Parent(parent.Parent):             # <<<<<<<<<<<<<<
 * 
 *     # returns a Morphism from S to self, or None
 */

struct __pyx_vtabstruct_4sage_9structure_10parent_old_Parent {
  struct __pyx_vtabstruct_4sage_9structure_6parent_Parent __pyx_base;
  PyObject *(*coerce_map_from_c)(struct __pyx_obj_4sage_9structure_10parent_old_Parent *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*coerce_map_from_c_impl)(struct __pyx_obj_4sage_9structure_10parent_old_Parent *, PyObject *);
  PyObject *(*get_action_c)(struct __pyx_obj_4sage_9structure_10parent_old_Parent *, PyObject *, PyObject *, int, int __pyx_skip_dispatch);
  PyObject *(*get_action_c_impl)(struct __pyx_obj_4sage_9structure_10parent_old_Parent *, PyObject *, PyObject *, int);
  PyObject *(*has_coerce_map_from_c)(struct __pyx_obj_4sage_9structure_10parent_old_Parent *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*has_coerce_map_from_c_impl)(struct __pyx_obj_4sage_9structure_10parent_old_Parent *, PyObject *);
  PyObject *(*_coerce_c)(struct __pyx_obj_4sage_9structure_10parent_old_Parent *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*_coerce_c_impl)(struct __pyx_obj_4sage_9structure_10parent_old_Parent *, PyObject *);
  PyObject *(*_coerce_self_c)(struct __pyx_obj_4sage_9structure_10parent_old_Parent *, PyObject *);
  PyObject *(*_an_element_c_impl)(struct __pyx_obj_4sage_9structure_10parent_old_Parent *);
  PyObject *(*_an_element_c)(struct __pyx_obj_4sage_9structure_10parent_old_Parent *, int __pyx_skip_dispatch);
  PyObject *(*_richcmp)(struct __pyx_obj_4sage_9structure_10parent_old_Parent *, PyObject *, int);
  int (*_cmp_c_impl)(struct __pyx_obj_4sage_9structure_10parent_old_Parent *, struct __pyx_obj_4sage_9structure_6parent_Parent *);
};
static struct __pyx_vtabstruct_4sage_9structure_10parent_old_Parent *__pyx_vtabptr_4sage_9structure_10parent_old_Parent;


struct __pyx_vtabstruct_4sage_9structure_11parent_base_ParentWithBase {
  struct __pyx_vtabstruct_4sage_9structure_10parent_old_Parent __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_11parent_base_ParentWithBase *__pyx_vtabptr_4sage_9structure_11parent_base_ParentWithBase;


/* "sage/structure/parent_gens.pxd":15
 * cimport parent_base
 * 
 * cdef class ParentWithGens(parent_base.ParentWithBase):             # <<<<<<<<<<<<<<
 *     cdef public object _gens
 *     cdef public object _gens_dict
 */

struct __pyx_vtabstruct_4sage_9structure_11parent_gens_ParentWithGens {
  struct __pyx_vtabstruct_4sage_9structure_11parent_base_ParentWithBase __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_11parent_gens_ParentWithGens *__pyx_vtabptr_4sage_9structure_11parent_gens_ParentWithGens;


/* "ring.pxd":5
 * cpdef bint _is_Field(x) except -2
 * 
 * cdef class Ring(ParentWithGens):             # <<<<<<<<<<<<<<
 *     cdef public object _zero_element
 *     cdef public object _one_element
 */

struct __pyx_vtabstruct_4sage_5rings_4ring_Ring {
  struct __pyx_vtabstruct_4sage_9structure_11parent_gens_ParentWithGens __pyx_base;
};
static struct __pyx_vtabstruct_4sage_5rings_4ring_Ring *__pyx_vtabptr_4sage_5rings_4ring_Ring;


/* "ring.pxd":13
 *     cdef _an_element_c_impl(self)
 * 
 * cdef class CommutativeRing(Ring):             # <<<<<<<<<<<<<<
 *     cdef public object __fraction_field
 * 
 */

struct __pyx_vtabstruct_4sage_5rings_4ring_CommutativeRing {
  struct __pyx_vtabstruct_4sage_5rings_4ring_Ring __pyx_base;
};
static struct __pyx_vtabstruct_4sage_5rings_4ring_CommutativeRing *__pyx_vtabptr_4sage_5rings_4ring_CommutativeRing;


/* "ring.pxd":16
 *     cdef public object __fraction_field
 * 
 * cdef class IntegralDomain(CommutativeRing):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_5rings_4ring_IntegralDomain {
  struct __pyx_vtabstruct_4sage_5rings_4ring_CommutativeRing __pyx_base;
};
static struct __pyx_vtabstruct_4sage_5rings_4ring_IntegralDomain *__pyx_vtabptr_4sage_5rings_4ring_IntegralDomain;


/* "sage/structure/element.pxd":91
 *     pass
 * 
 * cdef class AlgebraElement(RingElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_7element_AlgebraElement {
  struct __pyx_vtabstruct_4sage_9structure_7element_RingElement __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_7element_AlgebraElement *__pyx_vtabptr_4sage_9structure_7element_AlgebraElement;


/* "sage/structure/element.pxd":116
 * 
 * 
 * cdef class Matrix(AlgebraElement):             # <<<<<<<<<<<<<<
 *     # All matrix classes must be written in Cython
 *     cdef Py_ssize_t _nrows
 */

struct __pyx_vtabstruct_4sage_9structure_7element_Matrix {
  struct __pyx_vtabstruct_4sage_9structure_7element_AlgebraElement __pyx_base;
  struct __pyx_obj_4sage_9structure_7element_Vector *(*_vector_times_matrix_)(struct __pyx_obj_4sage_9structure_7element_Matrix *, struct __pyx_obj_4sage_9structure_7element_Vector *);
  struct __pyx_obj_4sage_9structure_7element_Vector *(*_matrix_times_vector_)(struct __pyx_obj_4sage_9structure_7element_Matrix *, struct __pyx_obj_4sage_9structure_7element_Vector *);
  struct __pyx_obj_4sage_9structure_7element_Matrix *(*_matrix_times_matrix_)(struct __pyx_obj_4sage_9structure_7element_Matrix *, struct __pyx_obj_4sage_9structure_7element_Matrix *);
  int (*is_sparse_c)(struct __pyx_obj_4sage_9structure_7element_Matrix *);
  int (*is_dense_c)(struct __pyx_obj_4sage_9structure_7element_Matrix *);
};
static struct __pyx_vtabstruct_4sage_9structure_7element_Matrix *__pyx_vtabptr_4sage_9structure_7element_Matrix;


/* "matrix0.pxd":16
 * cimport sage.structure.mutability
 * 
 * cdef class Matrix(sage.structure.element.Matrix):             # <<<<<<<<<<<<<<
 *     # Properties of any matrix  (plus _parent, inherited from base class)
 *     cdef public object _cache
 */

struct __pyx_vtabstruct_4sage_6matrix_7matrix0_Matrix {
  struct __pyx_vtabstruct_4sage_9structure_7element_Matrix __pyx_base;
  int (*_will_use_strassen)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *);
  int (*_will_use_strassen_echelon)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *);
  int (*_strassen_default_cutoff)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *);
  int (*_strassen_default_echelon_cutoff)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *);
  long (*_hash)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *);
  PyObject *(*_set_pivots)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, PyObject *);
  PyObject *(*clear_cache)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *);
  PyObject *(*fetch)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, PyObject *);
  PyObject *(*cache)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, PyObject *, PyObject *);
  PyObject *(*check_bounds)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, Py_ssize_t, Py_ssize_t);
  PyObject *(*check_mutability)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *);
  PyObject *(*check_bounds_and_mutability)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, Py_ssize_t, Py_ssize_t);
  PyObject *(*set_unsafe)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, Py_ssize_t, Py_ssize_t, PyObject *);
  PyObject *(*get_unsafe)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, Py_ssize_t, Py_ssize_t);
  PyObject *(*_coerce_element)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, PyObject *);
  PyObject *(*check_row_bounds_and_mutability)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, Py_ssize_t, Py_ssize_t);
  PyObject *(*check_column_bounds_and_mutability)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, Py_ssize_t, Py_ssize_t);
  PyObject *(*swap_rows_c)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, Py_ssize_t, Py_ssize_t);
  PyObject *(*swap_columns_c)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, Py_ssize_t, Py_ssize_t);
  PyObject *(*add_multiple_of_row_c)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, Py_ssize_t, Py_ssize_t, PyObject *, Py_ssize_t);
  PyObject *(*add_multiple_of_column_c)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, Py_ssize_t, Py_ssize_t, PyObject *, Py_ssize_t);
  PyObject *(*rescale_row_c)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, Py_ssize_t, PyObject *, Py_ssize_t);
  PyObject *(*rescale_col_c)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, Py_ssize_t, PyObject *, Py_ssize_t);
};
static struct __pyx_vtabstruct_4sage_6matrix_7matrix0_Matrix *__pyx_vtabptr_4sage_6matrix_7matrix0_Matrix;


/* "matrix1.pxd":3
 * cimport matrix0
 * 
 * cdef class Matrix(matrix0.Matrix):             # <<<<<<<<<<<<<<
 *     pass
 */

struct __pyx_vtabstruct_4sage_6matrix_7matrix1_Matrix {
  struct __pyx_vtabstruct_4sage_6matrix_7matrix0_Matrix __pyx_base;
};
static struct __pyx_vtabstruct_4sage_6matrix_7matrix1_Matrix *__pyx_vtabptr_4sage_6matrix_7matrix1_Matrix;


/* "matrix2.pxd":15
 * cimport matrix1
 * 
 * cdef class Matrix(matrix1.Matrix):             # <<<<<<<<<<<<<<
 * 
 *     cdef _det_by_minors(self, Py_ssize_t level)
 */

struct __pyx_vtabstruct_4sage_6matrix_7matrix2_Matrix {
  struct __pyx_vtabstruct_4sage_6matrix_7matrix1_Matrix __pyx_base;
  PyObject *(*_det_by_minors)(struct __pyx_obj_4sage_6matrix_7matrix2_Matrix *, Py_ssize_t);
  PyObject *(*matrix_window)(struct __pyx_obj_4sage_6matrix_7matrix2_Matrix *, int __pyx_skip_dispatch, struct __pyx_opt_args_4sage_6matrix_7matrix2_6Matrix_matrix_window *__pyx_optional_args);
};
static struct __pyx_vtabstruct_4sage_6matrix_7matrix2_Matrix *__pyx_vtabptr_4sage_6matrix_7matrix2_Matrix;


struct __pyx_vtabstruct_4sage_6matrix_6matrix_Matrix {
  struct __pyx_vtabstruct_4sage_6matrix_7matrix2_Matrix __pyx_base;
};
static struct __pyx_vtabstruct_4sage_6matrix_6matrix_Matrix *__pyx_vtabptr_4sage_6matrix_6matrix_Matrix;


/* "map.pxd":4
 * from sage.structure.element cimport Element
 * 
 * cdef class Map(Element):             # <<<<<<<<<<<<<<
 *     cdef Parent _domain
 *     cdef Parent _codomain
 */

struct __pyx_vtabstruct_4sage_10categories_3map_Map {
  struct __pyx_vtabstruct_4sage_9structure_7element_Element __pyx_base;
  PyObject *(*_update_slots)(struct __pyx_obj_4sage_10categories_3map_Map *, PyObject *);
  PyObject *(*_extra_slots)(struct __pyx_obj_4sage_10categories_3map_Map *, PyObject *);
  struct __pyx_obj_4sage_9structure_7element_Element *(*_call_)(struct __pyx_obj_4sage_10categories_3map_Map *, PyObject *, int __pyx_skip_dispatch);
  struct __pyx_obj_4sage_9structure_7element_Element *(*_call_with_args)(struct __pyx_obj_4sage_10categories_3map_Map *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_4sage_10categories_3map_3Map__call_with_args *__pyx_optional_args);
  PyObject *(*domain)(struct __pyx_obj_4sage_10categories_3map_Map *, int __pyx_skip_dispatch);
  PyObject *(*codomain)(struct __pyx_obj_4sage_10categories_3map_Map *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_4sage_10categories_3map_Map *__pyx_vtabptr_4sage_10categories_3map_Map;


/* "sage/categories/morphism.pxd":5
 * from map cimport Map
 * 
 * cdef class Morphism(Map):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_10categories_8morphism_Morphism {
  struct __pyx_vtabstruct_4sage_10categories_3map_Map __pyx_base;
};
static struct __pyx_vtabstruct_4sage_10categories_8morphism_Morphism *__pyx_vtabptr_4sage_10categories_8morphism_Morphism;


/* "sage/structure/element.pxd":60
 * 
 * 
 * cdef class AdditiveGroupElement(ModuleElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_7element_AdditiveGroupElement {
  struct __pyx_vtabstruct_4sage_9structure_7element_ModuleElement __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_7element_AdditiveGroupElement *__pyx_vtabptr_4sage_9structure_7element_AdditiveGroupElement;


/* "sage/structure/generators.pxd":3
 * from sage.structure.sage_object cimport SageObject
 * 
 * cdef class Generators(SageObject):             # <<<<<<<<<<<<<<
 * 
 *     cdef readonly _obj
 */

struct __pyx_vtabstruct_4sage_9structure_10generators_Generators {
  PyObject *(*get_from_index)(struct __pyx_obj_4sage_9structure_10generators_Generators *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*index_set)(struct __pyx_obj_4sage_9structure_10generators_Generators *, int __pyx_skip_dispatch);
  PyObject *(*category)(struct __pyx_obj_4sage_9structure_10generators_Generators *, int __pyx_skip_dispatch);
  PyObject *(*obj)(struct __pyx_obj_4sage_9structure_10generators_Generators *, int __pyx_skip_dispatch);
  PyObject *(*count)(struct __pyx_obj_4sage_9structure_10generators_Generators *, int __pyx_skip_dispatch);
  PyObject *(*list)(struct __pyx_obj_4sage_9structure_10generators_Generators *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_4sage_9structure_10generators_Generators *__pyx_vtabptr_4sage_9structure_10generators_Generators;


/* "sage/structure/generators.pxd":28
 *     pass
 * 
 * cdef class Generators_lazy_all(Generators):             # <<<<<<<<<<<<<<
 *     cdef _f
 *     cdef int _compute_gens(self) except -1
 */

struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_lazy_all {
  struct __pyx_vtabstruct_4sage_9structure_10generators_Generators __pyx_base;
  int (*_compute_gens)(struct __pyx_obj_4sage_9structure_10generators_Generators_lazy_all *);
};
static struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_lazy_all *__pyx_vtabptr_4sage_9structure_10generators_Generators_lazy_all;


/* "map.pxd":27
 *     cdef Map _inverse
 * 
 * cdef class FormalCompositeMap(Map):             # <<<<<<<<<<<<<<
 *     cdef Map __first
 *     cdef Map __second
 */

struct __pyx_vtabstruct_4sage_10categories_3map_FormalCompositeMap {
  struct __pyx_vtabstruct_4sage_10categories_3map_Map __pyx_base;
};
static struct __pyx_vtabstruct_4sage_10categories_3map_FormalCompositeMap *__pyx_vtabptr_4sage_10categories_3map_FormalCompositeMap;


/* "sage/structure/parent_gens.pxd":22
 * 
 * 
 * cdef class ParentWithMultiplicativeAbelianGens(ParentWithGens):             # <<<<<<<<<<<<<<
 *     cdef public object _generator_orders
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_11parent_gens_ParentWithMultiplicativeAbelianGens {
  struct __pyx_vtabstruct_4sage_9structure_11parent_gens_ParentWithGens __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_11parent_gens_ParentWithMultiplicativeAbelianGens *__pyx_vtabptr_4sage_9structure_11parent_gens_ParentWithMultiplicativeAbelianGens;


/* "sage/structure/element.pxd":73
 *     cdef RingElement _add_long(self, long n)
 * 
 * cdef class CommutativeRingElement(RingElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_7element_CommutativeRingElement {
  struct __pyx_vtabstruct_4sage_9structure_7element_RingElement __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_7element_CommutativeRingElement *__pyx_vtabptr_4sage_9structure_7element_CommutativeRingElement;


/* "sage/structure/element.pxd":76
 *     pass
 * 
 * cdef class IntegralDomainElement(CommutativeRingElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_7element_IntegralDomainElement {
  struct __pyx_vtabstruct_4sage_9structure_7element_CommutativeRingElement __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_7element_IntegralDomainElement *__pyx_vtabptr_4sage_9structure_7element_IntegralDomainElement;


/* "sage/structure/element.pxd":79
 *     pass
 * 
 * cdef class DedekindDomainElement(IntegralDomainElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_7element_DedekindDomainElement {
  struct __pyx_vtabstruct_4sage_9structure_7element_IntegralDomainElement __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_7element_DedekindDomainElement *__pyx_vtabptr_4sage_9structure_7element_DedekindDomainElement;


/* "sage/structure/element.pxd":82
 *     pass
 * 
 * cdef class PrincipalIdealDomainElement(DedekindDomainElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_7element_PrincipalIdealDomainElement {
  struct __pyx_vtabstruct_4sage_9structure_7element_DedekindDomainElement __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_7element_PrincipalIdealDomainElement *__pyx_vtabptr_4sage_9structure_7element_PrincipalIdealDomainElement;


/* "sage/structure/coerce_dict.pxd":1
 * cdef class MonoDict:             # <<<<<<<<<<<<<<
 *     cdef __weakref__
 *     cdef Py_ssize_t _size
 */

struct __pyx_vtabstruct_4sage_9structure_11coerce_dict_MonoDict {
  PyObject *(*get)(struct __pyx_obj_4sage_9structure_11coerce_dict_MonoDict *, PyObject *);
  PyObject *(*set)(struct __pyx_obj_4sage_9structure_11coerce_dict_MonoDict *, PyObject *, PyObject *);
};
static struct __pyx_vtabstruct_4sage_9structure_11coerce_dict_MonoDict *__pyx_vtabptr_4sage_9structure_11coerce_dict_MonoDict;


/* "ring.pxd":35
 *     pass
 * 
 * cdef class CommutativeAlgebra(CommutativeRing):             # <<<<<<<<<<<<<<
 *     pass
 */

struct __pyx_vtabstruct_4sage_5rings_4ring_CommutativeAlgebra {
  struct __pyx_vtabstruct_4sage_5rings_4ring_CommutativeRing __pyx_base;
};
static struct __pyx_vtabstruct_4sage_5rings_4ring_CommutativeAlgebra *__pyx_vtabptr_4sage_5rings_4ring_CommutativeAlgebra;


/* "sage/structure/element.pxd":85
 *     pass
 * 
 * cdef class EuclideanDomainElement(PrincipalIdealDomainElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_7element_EuclideanDomainElement {
  struct __pyx_vtabstruct_4sage_9structure_7element_PrincipalIdealDomainElement __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_7element_EuclideanDomainElement *__pyx_vtabptr_4sage_9structure_7element_EuclideanDomainElement;


/* "sage/structure/element.pxd":53
 *     cdef RingElement coerce_to_base_ring(self, x)
 * 
 * cdef class MonoidElement(Element):             # <<<<<<<<<<<<<<
 *     cpdef MonoidElement _mul_(self, MonoidElement right)
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_7element_MonoidElement {
  struct __pyx_vtabstruct_4sage_9structure_7element_Element __pyx_base;
  struct __pyx_obj_4sage_9structure_7element_MonoidElement *(*_mul_)(struct __pyx_obj_4sage_9structure_7element_MonoidElement *, struct __pyx_obj_4sage_9structure_7element_MonoidElement *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_4sage_9structure_7element_MonoidElement *__pyx_vtabptr_4sage_9structure_7element_MonoidElement;


/* "sage/structure/element.pxd":56
 *     cpdef MonoidElement _mul_(self, MonoidElement right)
 * 
 * cdef class MultiplicativeGroupElement(MonoidElement):             # <<<<<<<<<<<<<<
 *     cpdef MultiplicativeGroupElement _div_(self, MultiplicativeGroupElement right)
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_7element_MultiplicativeGroupElement {
  struct __pyx_vtabstruct_4sage_9structure_7element_MonoidElement __pyx_base;
  struct __pyx_obj_4sage_9structure_7element_MultiplicativeGroupElement *(*_div_)(struct __pyx_obj_4sage_9structure_7element_MultiplicativeGroupElement *, struct __pyx_obj_4sage_9structure_7element_MultiplicativeGroupElement *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_4sage_9structure_7element_MultiplicativeGroupElement *__pyx_vtabptr_4sage_9structure_7element_MultiplicativeGroupElement;


/* "ring.pxd":23
 * 
 * 
 * cdef class PrincipalIdealDomain(IntegralDomain):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_5rings_4ring_PrincipalIdealDomain {
  struct __pyx_vtabstruct_4sage_5rings_4ring_IntegralDomain __pyx_base;
};
static struct __pyx_vtabstruct_4sage_5rings_4ring_PrincipalIdealDomain *__pyx_vtabptr_4sage_5rings_4ring_PrincipalIdealDomain;


/* "ring.pxd":26
 *     pass
 * 
 * cdef class EuclideanDomain(PrincipalIdealDomain):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_5rings_4ring_EuclideanDomain {
  struct __pyx_vtabstruct_4sage_5rings_4ring_PrincipalIdealDomain __pyx_base;
};
static struct __pyx_vtabstruct_4sage_5rings_4ring_EuclideanDomain *__pyx_vtabptr_4sage_5rings_4ring_EuclideanDomain;


/* "sage/structure/generators.pxd":25
 *     pass
 * 
 * cdef class Generators_none(Generators):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_none {
  struct __pyx_vtabstruct_4sage_9structure_10generators_Generators __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_none *__pyx_vtabptr_4sage_9structure_10generators_Generators_none;


/* "sage/rings/integer.pxd":9
 * from sage.categories.morphism cimport Morphism
 * 
 * cdef class Integer(EuclideanDomainElement):             # <<<<<<<<<<<<<<
 *     cdef mpz_t value
 * 
 */

struct __pyx_vtabstruct_4sage_5rings_7integer_Integer {
  struct __pyx_vtabstruct_4sage_9structure_7element_EuclideanDomainElement __pyx_base;
  void (*_to_ZZ)(struct __pyx_obj_4sage_5rings_7integer_Integer *, struct ZZ *);
  void (*set_from_mpz)(struct __pyx_obj_4sage_5rings_7integer_Integer *, mpz_t);
  mpz_t *(*get_value)(struct __pyx_obj_4sage_5rings_7integer_Integer *);
  PyObject *(*hash_c)(struct __pyx_obj_4sage_5rings_7integer_Integer *);
  PyObject *(*_pari_c)(struct __pyx_obj_4sage_5rings_7integer_Integer *);
  PyObject *(*_shift_helper)(struct __pyx_obj_4sage_5rings_7integer_Integer *, PyObject *, int, int __pyx_skip_dispatch);
  PyObject *(*_and)(struct __pyx_obj_4sage_5rings_7integer_Integer *, struct __pyx_obj_4sage_5rings_7integer_Integer *);
  PyObject *(*_or)(struct __pyx_obj_4sage_5rings_7integer_Integer *, struct __pyx_obj_4sage_5rings_7integer_Integer *);
  PyObject *(*_xor)(struct __pyx_obj_4sage_5rings_7integer_Integer *, struct __pyx_obj_4sage_5rings_7integer_Integer *);
  size_t (*_exact_log_log2_iter)(struct __pyx_obj_4sage_5rings_7integer_Integer *, struct __pyx_obj_4sage_5rings_7integer_Integer *, int __pyx_skip_dispatch);
  size_t (*_exact_log_mpfi_log)(struct __pyx_obj_4sage_5rings_7integer_Integer *, PyObject *, int __pyx_skip_dispatch);
  struct __pyx_obj_4sage_9structure_7element_RingElement *(*_valuation)(struct __pyx_obj_4sage_5rings_7integer_Integer *, struct __pyx_obj_4sage_5rings_7integer_Integer *, int __pyx_skip_dispatch);
  PyObject *(*_val_unit)(struct __pyx_obj_4sage_5rings_7integer_Integer *, struct __pyx_obj_4sage_5rings_7integer_Integer *);
  struct __pyx_obj_4sage_5rings_7integer_Integer *(*_divide_knowing_divisible_by)(struct __pyx_obj_4sage_5rings_7integer_Integer *, struct __pyx_obj_4sage_5rings_7integer_Integer *);
  int (*_is_power_of)(struct __pyx_obj_4sage_5rings_7integer_Integer *, struct __pyx_obj_4sage_5rings_7integer_Integer *);
  PyObject *(*_reduce_set)(struct __pyx_obj_4sage_5rings_7integer_Integer *, PyObject *);
};
static struct __pyx_vtabstruct_4sage_5rings_7integer_Integer *__pyx_vtabptr_4sage_5rings_7integer_Integer;


/* "sage/structure/mutability.pxd":15
 * ##########################################################################
 * 
 * cdef class Mutability:             # <<<<<<<<<<<<<<
 *     cdef public bint _is_immutable
 *     cdef _require_mutable_cdef(self)
 */

struct __pyx_vtabstruct_4sage_9structure_10mutability_Mutability {
  PyObject *(*_require_mutable_cdef)(struct __pyx_obj_4sage_9structure_10mutability_Mutability *);
};
static struct __pyx_vtabstruct_4sage_9structure_10mutability_Mutability *__pyx_vtabptr_4sage_9structure_10mutability_Mutability;


/* "sage/rings/integer.pxd":35
 * cdef Integer smallInteger(long value)
 * 
 * cdef class int_to_Z(Morphism):             # <<<<<<<<<<<<<<
 *     pass
 */

struct __pyx_vtabstruct_4sage_5rings_7integer_int_to_Z {
  struct __pyx_vtabstruct_4sage_10categories_8morphism_Morphism __pyx_base;
};
static struct __pyx_vtabstruct_4sage_5rings_7integer_int_to_Z *__pyx_vtabptr_4sage_5rings_7integer_int_to_Z;


/* "sage/structure/element.pxd":104
 * 
 * 
 * cdef class Vector(ModuleElement):             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t _degree
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_7element_Vector {
  struct __pyx_vtabstruct_4sage_9structure_7element_ModuleElement __pyx_base;
  struct __pyx_obj_4sage_9structure_7element_Element *(*_dot_product_)(struct __pyx_obj_4sage_9structure_7element_Vector *, struct __pyx_obj_4sage_9structure_7element_Vector *, int __pyx_skip_dispatch);
  struct __pyx_obj_4sage_9structure_7element_Vector *(*_pairwise_product_)(struct __pyx_obj_4sage_9structure_7element_Vector *, struct __pyx_obj_4sage_9structure_7element_Vector *, int __pyx_skip_dispatch);
  int (*is_sparse_c)(struct __pyx_obj_4sage_9structure_7element_Vector *);
  int (*is_dense_c)(struct __pyx_obj_4sage_9structure_7element_Vector *);
};
static struct __pyx_vtabstruct_4sage_9structure_7element_Vector *__pyx_vtabptr_4sage_9structure_7element_Vector;


/* "sage/structure/generators.pxd":16
 *     cpdef list(self)
 * 
 * cdef class Generators_finite(Generators):             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t _n
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_finite {
  struct __pyx_vtabstruct_4sage_9structure_10generators_Generators __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_finite *__pyx_vtabptr_4sage_9structure_10generators_Generators_finite;


/* "sage/structure/generators.pxd":19
 *     cdef Py_ssize_t _n
 * 
 * cdef class Generators_list(Generators_finite):             # <<<<<<<<<<<<<<
 *     cdef _List
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_list {
  struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_finite __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_list *__pyx_vtabptr_4sage_9structure_10generators_Generators_list;


/* "sage/structure/element.pxd":131
 * 
 * 
 * cdef class CoercionModel:             # <<<<<<<<<<<<<<
 *     cpdef canonical_coercion(self, x, y)
 *     cpdef bin_op(self, x, y, op)
 */

struct __pyx_vtabstruct_4sage_9structure_7element_CoercionModel {
  PyObject *(*canonical_coercion)(struct __pyx_obj_4sage_9structure_7element_CoercionModel *, PyObject *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*bin_op)(struct __pyx_obj_4sage_9structure_7element_CoercionModel *, PyObject *, PyObject *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_4sage_9structure_7element_CoercionModel *__pyx_vtabptr_4sage_9structure_7element_CoercionModel;


/* "sage/structure/coerce_dict.pxd":14
 *     cdef object D
 * 
 * cdef class TripleDict:             # <<<<<<<<<<<<<<
 *     cdef __weakref__
 *     cdef Py_ssize_t _size
 */

struct __pyx_vtabstruct_4sage_9structure_11coerce_dict_TripleDict {
  PyObject *(*get)(struct __pyx_obj_4sage_9structure_11coerce_dict_TripleDict *, PyObject *, PyObject *, PyObject *);
  PyObject *(*set)(struct __pyx_obj_4sage_9structure_11coerce_dict_TripleDict *, PyObject *, PyObject *, PyObject *, PyObject *);
};
static struct __pyx_vtabstruct_4sage_9structure_11coerce_dict_TripleDict *__pyx_vtabptr_4sage_9structure_11coerce_dict_TripleDict;


/* "ring.pxd":32
 *     pass
 * 
 * cdef class Algebra(Ring):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_5rings_4ring_Algebra {
  struct __pyx_vtabstruct_4sage_5rings_4ring_Ring __pyx_base;
};
static struct __pyx_vtabstruct_4sage_5rings_4ring_Algebra *__pyx_vtabptr_4sage_5rings_4ring_Algebra;


/* "sage/structure/element.pxd":26
 *     cpdef _acted_upon_(self, x, bint self_on_left)
 * 
 * cdef class ElementWithCachedMethod(Element):             # <<<<<<<<<<<<<<
 *     cdef public dict __cached_methods
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_7element_ElementWithCachedMethod {
  struct __pyx_vtabstruct_4sage_9structure_7element_Element __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_7element_ElementWithCachedMethod *__pyx_vtabptr_4sage_9structure_7element_ElementWithCachedMethod;


/* "sage/structure/element.pxd":88
 *     pass
 * 
 * cdef class FieldElement(CommutativeRingElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_7element_FieldElement {
  struct __pyx_vtabstruct_4sage_9structure_7element_CommutativeRingElement __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_7element_FieldElement *__pyx_vtabptr_4sage_9structure_7element_FieldElement;


/* "sage/rings/integer_ring.pxd":7
 * from integer cimport Integer
 * 
 * cdef class IntegerRing_class(PrincipalIdealDomain):             # <<<<<<<<<<<<<<
 *     cdef Integer _coerce_ZZ(self, ZZ_c *z)
 *     cdef int _randomize_mpz(self, mpz_t value, x, y, distribution) except -1
 */

struct __pyx_vtabstruct_4sage_5rings_12integer_ring_IntegerRing_class {
  struct __pyx_vtabstruct_4sage_5rings_4ring_PrincipalIdealDomain __pyx_base;
  struct __pyx_obj_4sage_5rings_7integer_Integer *(*_coerce_ZZ)(struct __pyx_obj_4sage_5rings_12integer_ring_IntegerRing_class *, struct ZZ *);
  int (*_randomize_mpz)(struct __pyx_obj_4sage_5rings_12integer_ring_IntegerRing_class *, mpz_t, PyObject *, PyObject *, PyObject *);
};
static struct __pyx_vtabstruct_4sage_5rings_12integer_ring_IntegerRing_class *__pyx_vtabptr_4sage_5rings_12integer_ring_IntegerRing_class;


/* "sage/categories/morphism.pxd":8
 *     pass
 * 
 * cdef class SetMorphism(Morphism):             # <<<<<<<<<<<<<<
 *     cdef object _function
 *     cpdef bint _eq_c_impl(left, Element right)
 */

struct __pyx_vtabstruct_4sage_10categories_8morphism_SetMorphism {
  struct __pyx_vtabstruct_4sage_10categories_8morphism_Morphism __pyx_base;
  int (*_eq_c_impl)(struct __pyx_obj_4sage_10categories_8morphism_SetMorphism *, struct __pyx_obj_4sage_9structure_7element_Element *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_4sage_10categories_8morphism_SetMorphism *__pyx_vtabptr_4sage_10categories_8morphism_SetMorphism;


/* "ring.pxd":29
 *     pass
 * 
 * cdef class Field(PrincipalIdealDomain):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_5rings_4ring_Field {
  struct __pyx_vtabstruct_4sage_5rings_4ring_PrincipalIdealDomain __pyx_base;
};
static struct __pyx_vtabstruct_4sage_5rings_4ring_Field *__pyx_vtabptr_4sage_5rings_4ring_Field;


/* "sage/structure/element.pxd":97
 *     pass
 * 
 * cdef class CommutativeAlgebra(AlgebraElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_7element_CommutativeAlgebra {
  struct __pyx_vtabstruct_4sage_9structure_7element_AlgebraElement __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_7element_CommutativeAlgebra *__pyx_vtabptr_4sage_9structure_7element_CommutativeAlgebra;


/* "sage/matrix/matrix_dense.pxd":3
 * cimport matrix
 * 
 * cdef class Matrix_dense(matrix.Matrix):             # <<<<<<<<<<<<<<
 *     cdef set_unsafe_int(self, Py_ssize_t i, Py_ssize_t j, int value)
 * 
 */

struct __pyx_vtabstruct_4sage_6matrix_12matrix_dense_Matrix_dense {
  struct __pyx_vtabstruct_4sage_6matrix_6matrix_Matrix __pyx_base;
  PyObject *(*set_unsafe_int)(struct __pyx_obj_4sage_6matrix_12matrix_dense_Matrix_dense *, Py_ssize_t, Py_ssize_t, int);
};
static struct __pyx_vtabstruct_4sage_6matrix_12matrix_dense_Matrix_dense *__pyx_vtabptr_4sage_6matrix_12matrix_dense_Matrix_dense;


/* "sage/structure/generators.pxd":22
 *     cdef _List
 * 
 * cdef class Generators_naturals(Generators):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_naturals {
  struct __pyx_vtabstruct_4sage_9structure_10generators_Generators __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_naturals *__pyx_vtabptr_4sage_9structure_10generators_Generators_naturals;


/* "ring.pxd":19
 *     pass
 * 
 * cdef class DedekindDomain(IntegralDomain):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_5rings_4ring_DedekindDomain {
  struct __pyx_vtabstruct_4sage_5rings_4ring_IntegralDomain __pyx_base;
};
static struct __pyx_vtabstruct_4sage_5rings_4ring_DedekindDomain *__pyx_vtabptr_4sage_5rings_4ring_DedekindDomain;


/* "sage/structure/parent_gens.pxd":25
 *     cdef public object _generator_orders
 * 
 * cdef class ParentWithAdditiveAbelianGens(ParentWithGens):             # <<<<<<<<<<<<<<
 *     cdef public object _generator_orders
 */

struct __pyx_vtabstruct_4sage_9structure_11parent_gens_ParentWithAdditiveAbelianGens {
  struct __pyx_vtabstruct_4sage_9structure_11parent_gens_ParentWithGens __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_11parent_gens_ParentWithAdditiveAbelianGens *__pyx_vtabptr_4sage_9structure_11parent_gens_ParentWithAdditiveAbelianGens;


/* "matrix_ebb_dense.pyx":38
 * from sage.matrix.matrix_dense cimport Matrix_dense
 * 
 * cdef class Matrix_ebb_dense(Matrix_dense):   # dense or sparse             # <<<<<<<<<<<<<<
 *     ########################################################################
 *     # LEVEL 1 functionality
 */

struct __pyx_vtabstruct_16matrix_ebb_dense_Matrix_ebb_dense {
  struct __pyx_vtabstruct_4sage_6matrix_12matrix_dense_Matrix_dense __pyx_base;
  PyObject *(*_zero_out_matrix)(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *);
  PyObject *(*_new_unitialized_matrix)(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *, Py_ssize_t, Py_ssize_t);
  PyObject *(*_pickle_version0)(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *);
  PyObject *(*_unpickle_version0)(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *, PyObject *);
  PyObject *(*_export_as_string)(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *, int __pyx_skip_dispatch, struct __pyx_opt_args_16matrix_ebb_dense_16Matrix_ebb_dense__export_as_string *__pyx_optional_args);
};
static struct __pyx_vtabstruct_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_vtabptr_16matrix_ebb_dense_Matrix_ebb_dense;


/* "sage/structure/element.pxd":94
 *     pass
 * 
 * cdef class CommutativeAlgebraElement(CommutativeRingElement):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_4sage_9structure_7element_CommutativeAlgebraElement {
  struct __pyx_vtabstruct_4sage_9structure_7element_CommutativeRingElement __pyx_base;
};
static struct __pyx_vtabstruct_4sage_9structure_7element_CommutativeAlgebraElement *__pyx_vtabptr_4sage_9structure_7element_CommutativeAlgebraElement;


/* "map.pxd":24
 * 
 * 
 * cdef class Section(Map):             # <<<<<<<<<<<<<<
 *     cdef Map _inverse
 * 
 */

struct __pyx_vtabstruct_4sage_10categories_3map_Section {
  struct __pyx_vtabstruct_4sage_10categories_3map_Map __pyx_base;
};
static struct __pyx_vtabstruct_4sage_10categories_3map_Section *__pyx_vtabptr_4sage_10categories_3map_Section;
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname); /*proto*/
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif /* CYTHON_REFNANNY */
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name); /*proto*/

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name); /*proto*/

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type); /*proto*/

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name); /*proto*/

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause); /*proto*/

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact); /*proto*/

static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc);

static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse);

static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_dealloc);

static void* __Pyx_GetVtable(PyObject *dict); /*proto*/

static int __Pyx_SetVtable(PyObject *dict, void *vtable); /*proto*/

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name); /*proto*/

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level); /*proto*/

#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject *);

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject *);

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject *);

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject *);

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject *);

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject *);

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject *);

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject *);

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject *);

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject *);

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject *);

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject *);

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject *);

static int __Pyx_check_binary_version(void);

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name); /*proto*/

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);  /*proto*/

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/


/* Module declarations from 'sage.ext.mod_int' */

/* Module declarations from 'sage.structure.sage_object' */
static PyTypeObject *__pyx_ptype_4sage_9structure_11sage_object_SageObject = 0;

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'sage.structure.generators' */
static PyTypeObject *__pyx_ptype_4sage_9structure_10generators_Generators = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_10generators_Generators_finite = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_10generators_Generators_list = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_10generators_Generators_naturals = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_10generators_Generators_none = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_10generators_Generators_lazy_all = 0;

/* Module declarations from 'sage.structure.category_object' */
static PyTypeObject *__pyx_ptype_4sage_9structure_15category_object_CategoryObject = 0;

/* Module declarations from 'sage.structure.coerce_dict' */
static PyTypeObject *__pyx_ptype_4sage_9structure_11coerce_dict_MonoDict = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_11coerce_dict_MonoDictEraser = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_11coerce_dict_TripleDict = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_11coerce_dict_TripleDictEraser = 0;

/* Module declarations from 'sage.structure.parent' */
static PyTypeObject *__pyx_ptype_4sage_9structure_6parent_Parent = 0;

/* Module declarations from 'sage.structure.mutability' */
static PyTypeObject *__pyx_ptype_4sage_9structure_10mutability_Mutability = 0;

/* Module declarations from 'sage.structure' */

/* Module declarations from 'sage' */

/* Module declarations from 'sage.structure.element' */
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_Element = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_ElementWithCachedMethod = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_ModuleElement = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_RingElement = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_MonoidElement = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_MultiplicativeGroupElement = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_AdditiveGroupElement = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_CommutativeRingElement = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_IntegralDomainElement = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_DedekindDomainElement = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_PrincipalIdealDomainElement = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_EuclideanDomainElement = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_FieldElement = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_AlgebraElement = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_CommutativeAlgebraElement = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_CommutativeAlgebra = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_InfinityElement = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_Vector = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_Matrix = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_7element_CoercionModel = 0;

/* Module declarations from 'sage.matrix.matrix0' */
static PyTypeObject *__pyx_ptype_4sage_6matrix_7matrix0_Matrix = 0;

/* Module declarations from 'sage.matrix.matrix1' */
static PyTypeObject *__pyx_ptype_4sage_6matrix_7matrix1_Matrix = 0;

/* Module declarations from 'sage.matrix.matrix2' */
static PyTypeObject *__pyx_ptype_4sage_6matrix_7matrix2_Matrix = 0;

/* Module declarations from 'sage.matrix.matrix' */
static PyTypeObject *__pyx_ptype_4sage_6matrix_6matrix_Matrix = 0;

/* Module declarations from 'sage.matrix.matrix_dense' */
static PyTypeObject *__pyx_ptype_4sage_6matrix_12matrix_dense_Matrix_dense = 0;

/* Module declarations from 'libc.math' */

/* Module declarations from 'sage.libs.gmp.types' */

/* Module declarations from 'sage.libs.gmp.random' */

/* Module declarations from 'sage.libs.gmp.mpz' */

/* Module declarations from 'sage.libs.gmp.mpq' */

/* Module declarations from 'sage.libs.gmp.all' */

/* Module declarations from 'cpython.exc' */

/* Module declarations from 'cpython.module' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'cpython.tuple' */

/* Module declarations from 'cpython.list' */

/* Module declarations from 'cpython.sequence' */

/* Module declarations from 'cpython.mapping' */

/* Module declarations from 'cpython.iterator' */

/* Module declarations from 'cpython.number' */

/* Module declarations from 'cpython.int' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.bool' */
static PyTypeObject *__pyx_ptype_7cpython_4bool_bool = 0;

/* Module declarations from 'cpython.long' */

/* Module declarations from 'cpython.float' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.complex' */
static PyTypeObject *__pyx_ptype_7cpython_7complex_complex = 0;

/* Module declarations from 'cpython.string' */

/* Module declarations from 'cpython.dict' */

/* Module declarations from 'cpython.instance' */

/* Module declarations from 'cpython.function' */

/* Module declarations from 'cpython.method' */

/* Module declarations from 'cpython.set' */

/* Module declarations from 'sage.libs.ntl.ntl_ZZ_decl' */

/* Module declarations from 'sage.libs.ntl.ntl_lzz_p_decl' */

/* Module declarations from 'sage.libs.ntl.ntl_lzz_pX_decl' */

/* Module declarations from 'sage.libs.ntl.ntl_ZZ_p_decl' */

/* Module declarations from 'sage.libs.ntl.ntl_vec_ZZ_p_decl' */

/* Module declarations from 'sage.libs.ntl.ntl_ZZX_decl' */

/* Module declarations from 'sage.libs.ntl.ntl_ZZ_pContext_decl' */

/* Module declarations from 'sage.libs.ntl.ntl_ZZ_pX_decl' */

/* Module declarations from 'sage.libs.ntl.ntl_lzz_pContext_decl' */

/* Module declarations from 'sage.libs.ntl.ntl_ZZ_pEContext_decl' */

/* Module declarations from 'sage.libs.ntl.ntl_ZZ_pE_decl' */

/* Module declarations from 'sage.libs.ntl.ntl_vec_ZZ_pE_decl' */

/* Module declarations from 'sage.libs.ntl.ntl_ZZ_pEX_decl' */

/* Module declarations from 'sage.categories.map' */
static PyTypeObject *__pyx_ptype_4sage_10categories_3map_Map = 0;
static PyTypeObject *__pyx_ptype_4sage_10categories_3map_Section = 0;
static PyTypeObject *__pyx_ptype_4sage_10categories_3map_FormalCompositeMap = 0;

/* Module declarations from 'sage.categories.morphism' */
static PyTypeObject *__pyx_ptype_4sage_10categories_8morphism_Morphism = 0;
static PyTypeObject *__pyx_ptype_4sage_10categories_8morphism_SetMorphism = 0;

/* Module declarations from 'sage.rings.integer' */
static PyTypeObject *__pyx_ptype_4sage_5rings_7integer_Integer = 0;
static PyTypeObject *__pyx_ptype_4sage_5rings_7integer_int_to_Z = 0;

/* Module declarations from 'sage.structure.parent_old' */
static PyTypeObject *__pyx_ptype_4sage_9structure_10parent_old_Parent = 0;

/* Module declarations from 'sage.structure.parent_base' */
static PyTypeObject *__pyx_ptype_4sage_9structure_11parent_base_ParentWithBase = 0;

/* Module declarations from 'sage.structure.parent_gens' */
static PyTypeObject *__pyx_ptype_4sage_9structure_11parent_gens_ParentWithGens = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_11parent_gens_ParentWithMultiplicativeAbelianGens = 0;
static PyTypeObject *__pyx_ptype_4sage_9structure_11parent_gens_ParentWithAdditiveAbelianGens = 0;

/* Module declarations from 'sage.rings.ring' */
static PyTypeObject *__pyx_ptype_4sage_5rings_4ring_Ring = 0;
static PyTypeObject *__pyx_ptype_4sage_5rings_4ring_CommutativeRing = 0;
static PyTypeObject *__pyx_ptype_4sage_5rings_4ring_IntegralDomain = 0;
static PyTypeObject *__pyx_ptype_4sage_5rings_4ring_DedekindDomain = 0;
static PyTypeObject *__pyx_ptype_4sage_5rings_4ring_PrincipalIdealDomain = 0;
static PyTypeObject *__pyx_ptype_4sage_5rings_4ring_EuclideanDomain = 0;
static PyTypeObject *__pyx_ptype_4sage_5rings_4ring_Field = 0;
static PyTypeObject *__pyx_ptype_4sage_5rings_4ring_Algebra = 0;
static PyTypeObject *__pyx_ptype_4sage_5rings_4ring_CommutativeAlgebra = 0;

/* Module declarations from 'sage.rings.integer_ring' */
static PyTypeObject *__pyx_ptype_4sage_5rings_12integer_ring_IntegerRing_class = 0;

/* Module declarations from 'matrix_ebb_dense' */
static PyTypeObject *__pyx_ptype_16matrix_ebb_dense_PyRectangle = 0;
static PyTypeObject *__pyx_ptype_16matrix_ebb_dense_Matrix_ebb_dense = 0;
#define __Pyx_MODULE_NAME "matrix_ebb_dense"
int __pyx_module_is_main_matrix_ebb_dense = 0;

/* Implementation of 'matrix_ebb_dense' */
static PyObject *__pyx_builtin_RuntimeError;
static int __pyx_pf_16matrix_ebb_dense_11PyRectangle___cinit__(struct __pyx_obj_16matrix_ebb_dense_PyRectangle *__pyx_v_self, int __pyx_v_x0, int __pyx_v_y0, int __pyx_v_x1, int __pyx_v_y1); /* proto */
static void __pyx_pf_16matrix_ebb_dense_11PyRectangle_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_PyRectangle *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_16matrix_ebb_dense_11PyRectangle_4getLength(struct __pyx_obj_16matrix_ebb_dense_PyRectangle *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_16matrix_ebb_dense_11PyRectangle_6getHeight(struct __pyx_obj_16matrix_ebb_dense_PyRectangle *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_16matrix_ebb_dense_11PyRectangle_8getArea(struct __pyx_obj_16matrix_ebb_dense_PyRectangle *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_16matrix_ebb_dense_11PyRectangle_10move(struct __pyx_obj_16matrix_ebb_dense_PyRectangle *__pyx_v_self, PyObject *__pyx_v_dx, PyObject *__pyx_v_dy); /* proto */
static int __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense___cinit__(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self, PyObject *__pyx_v_parent, CYTHON_UNUSED PyObject *__pyx_v_entries, CYTHON_UNUSED PyObject *__pyx_v_coerce, CYTHON_UNUSED PyObject *__pyx_v_copy); /* proto */
static PyObject *__pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_2__copy__(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self); /* proto */
static Py_hash_t __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_4__hash__(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self); /* proto */
static void __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_6__dealloc__(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self); /* proto */
static int __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_8__init__(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_parent, CYTHON_UNUSED PyObject *__pyx_v_entries, CYTHON_UNUSED PyObject *__pyx_v_copy, CYTHON_UNUSED PyObject *__pyx_v_coerce); /* proto */
static PyObject *__pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_10_pickle(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_12_export_as_string(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self, int __pyx_v_base); /* proto */
static PyObject *__pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_14_unpickle(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_data, CYTHON_UNUSED int __pyx_v_version); /* proto */
static PyObject *__pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_16__richcmp__(struct __pyx_obj_4sage_6matrix_6matrix_Matrix *__pyx_v_self, PyObject *__pyx_v_right, int __pyx_v_op); /* proto */
static PyObject *__pyx_tp_new_16matrix_ebb_dense_PyRectangle(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_16matrix_ebb_dense_Matrix_ebb_dense(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static char __pyx_k_14[] = "sage.rings.rational_field";
static char __pyx_k_15[] = "sage.rings.real_double";
static char __pyx_k_16[] = "sage.rings.integer_ring";
static char __pyx_k__QQ[] = "QQ";
static char __pyx_k__ZZ[] = "ZZ";
static char __pyx_k__dx[] = "dx";
static char __pyx_k__dy[] = "dy";
static char __pyx_k__x0[] = "x0";
static char __pyx_k__x1[] = "x1";
static char __pyx_k__y0[] = "y0";
static char __pyx_k__y1[] = "y1";
static char __pyx_k__RDF[] = "RDF";
static char __pyx_k__base[] = "base";
static char __pyx_k__copy[] = "copy";
static char __pyx_k__data[] = "data";
static char __pyx_k__ncols[] = "ncols";
static char __pyx_k__nrows[] = "nrows";
static char __pyx_k__coerce[] = "coerce";
static char __pyx_k__parent[] = "parent";
static char __pyx_k___pickle[] = "_pickle";
static char __pyx_k__entries[] = "entries";
static char __pyx_k__version[] = "version";
static char __pyx_k____copy__[] = "__copy__";
static char __pyx_k____hash__[] = "__hash__";
static char __pyx_k____init__[] = "__init__";
static char __pyx_k____main__[] = "__main__";
static char __pyx_k____test__[] = "__test__";
static char __pyx_k____cinit__[] = "__cinit__";
static char __pyx_k___unpickle[] = "_unpickle";
static char __pyx_k____import__[] = "__import__";
static char __pyx_k__get_unsafe[] = "get_unsafe";
static char __pyx_k__set_unsafe[] = "set_unsafe";
static char __pyx_k____dealloc__[] = "__dealloc__";
static char __pyx_k__RuntimeError[] = "RuntimeError";
static char __pyx_k__matrix_space[] = "matrix_space";
static char __pyx_k____pyx_vtable__[] = "__pyx_vtable__";
static char __pyx_k___pickle_version0[] = "_pickle_version0";
static char __pyx_k___zero_out_matrix[] = "_zero_out_matrix";
static char __pyx_k__IntegerRing_class[] = "IntegerRing_class";
static char __pyx_k___export_as_string[] = "_export_as_string";
static char __pyx_k___unpickle_version0[] = "_unpickle_version0";
static PyObject *__pyx_n_s_14;
static PyObject *__pyx_n_s_15;
static PyObject *__pyx_n_s_16;
static PyObject *__pyx_n_s__IntegerRing_class;
static PyObject *__pyx_n_s__QQ;
static PyObject *__pyx_n_s__RDF;
static PyObject *__pyx_n_s__RuntimeError;
static PyObject *__pyx_n_s__ZZ;
static PyObject *__pyx_n_s____cinit__;
static PyObject *__pyx_n_s____copy__;
static PyObject *__pyx_n_s____dealloc__;
static PyObject *__pyx_n_s____hash__;
static PyObject *__pyx_n_s____import__;
static PyObject *__pyx_n_s____init__;
static PyObject *__pyx_n_s____main__;
static PyObject *__pyx_n_s____pyx_vtable__;
static PyObject *__pyx_n_s____test__;
static PyObject *__pyx_n_s___export_as_string;
static PyObject *__pyx_n_s___pickle;
static PyObject *__pyx_n_s___pickle_version0;
static PyObject *__pyx_n_s___unpickle;
static PyObject *__pyx_n_s___unpickle_version0;
static PyObject *__pyx_n_s___zero_out_matrix;
static PyObject *__pyx_n_s__base;
static PyObject *__pyx_n_s__coerce;
static PyObject *__pyx_n_s__copy;
static PyObject *__pyx_n_s__data;
static PyObject *__pyx_n_s__dx;
static PyObject *__pyx_n_s__dy;
static PyObject *__pyx_n_s__entries;
static PyObject *__pyx_n_s__get_unsafe;
static PyObject *__pyx_n_s__matrix_space;
static PyObject *__pyx_n_s__ncols;
static PyObject *__pyx_n_s__nrows;
static PyObject *__pyx_n_s__parent;
static PyObject *__pyx_n_s__set_unsafe;
static PyObject *__pyx_n_s__version;
static PyObject *__pyx_n_s__x0;
static PyObject *__pyx_n_s__x1;
static PyObject *__pyx_n_s__y0;
static PyObject *__pyx_n_s__y1;
static PyObject *__pyx_k_tuple_1;
static PyObject *__pyx_k_tuple_2;
static PyObject *__pyx_k_tuple_3;
static PyObject *__pyx_k_tuple_4;
static PyObject *__pyx_k_tuple_5;
static PyObject *__pyx_k_tuple_6;
static PyObject *__pyx_k_tuple_7;
static PyObject *__pyx_k_tuple_8;
static PyObject *__pyx_k_tuple_9;
static PyObject *__pyx_k_tuple_10;
static PyObject *__pyx_k_tuple_11;
static PyObject *__pyx_k_tuple_12;
static PyObject *__pyx_k_tuple_13;

/* Python wrapper */
static int __pyx_pw_16matrix_ebb_dense_11PyRectangle_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_16matrix_ebb_dense_11PyRectangle_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_x0;
  int __pyx_v_y0;
  int __pyx_v_x1;
  int __pyx_v_y1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x0,&__pyx_n_s__y0,&__pyx_n_s__x1,&__pyx_n_s__y1,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x0)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y0)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_x0 = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_x0 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y0 = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_y0 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_x1 = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_x1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y1 = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_y1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("matrix_ebb_dense.PyRectangle.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_16matrix_ebb_dense_11PyRectangle___cinit__(((struct __pyx_obj_16matrix_ebb_dense_PyRectangle *)__pyx_v_self), __pyx_v_x0, __pyx_v_y0, __pyx_v_x1, __pyx_v_y1);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":15
 * cdef class PyRectangle:
 *     cdef Rectangle *thisptr      # hold a C++ instance which we're wrapping
 *     def __cinit__(self, int x0, int y0, int x1, int y1):             # <<<<<<<<<<<<<<
 *         self.thisptr = new Rectangle(x0, y0, x1, y1)
 *     def __dealloc__(self):
 */

static int __pyx_pf_16matrix_ebb_dense_11PyRectangle___cinit__(struct __pyx_obj_16matrix_ebb_dense_PyRectangle *__pyx_v_self, int __pyx_v_x0, int __pyx_v_y0, int __pyx_v_x1, int __pyx_v_y1) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  shapes::Rectangle *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "matrix_ebb_dense.pyx":16
 *     cdef Rectangle *thisptr      # hold a C++ instance which we're wrapping
 *     def __cinit__(self, int x0, int y0, int x1, int y1):
 *         self.thisptr = new Rectangle(x0, y0, x1, y1)             # <<<<<<<<<<<<<<
 *     def __dealloc__(self):
 *         del self.thisptr
 */
  try {
    __pyx_t_1 = new shapes::Rectangle(__pyx_v_x0, __pyx_v_y0, __pyx_v_x1, __pyx_v_y1);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_self->thisptr = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("matrix_ebb_dense.PyRectangle.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_16matrix_ebb_dense_11PyRectangle_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_16matrix_ebb_dense_11PyRectangle_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_16matrix_ebb_dense_11PyRectangle_2__dealloc__(((struct __pyx_obj_16matrix_ebb_dense_PyRectangle *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "matrix_ebb_dense.pyx":17
 *     def __cinit__(self, int x0, int y0, int x1, int y1):
 *         self.thisptr = new Rectangle(x0, y0, x1, y1)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *     def getLength(self):
 */

static void __pyx_pf_16matrix_ebb_dense_11PyRectangle_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_PyRectangle *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "matrix_ebb_dense.pyx":18
 *         self.thisptr = new Rectangle(x0, y0, x1, y1)
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *     def getLength(self):
 *         return self.thisptr.getLength()
 */
  delete __pyx_v_self->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_16matrix_ebb_dense_11PyRectangle_5getLength(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_16matrix_ebb_dense_11PyRectangle_5getLength(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getLength (wrapper)", 0);
  __pyx_r = __pyx_pf_16matrix_ebb_dense_11PyRectangle_4getLength(((struct __pyx_obj_16matrix_ebb_dense_PyRectangle *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":19
 *     def __dealloc__(self):
 *         del self.thisptr
 *     def getLength(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.getLength()
 *     def getHeight(self):
 */

static PyObject *__pyx_pf_16matrix_ebb_dense_11PyRectangle_4getLength(struct __pyx_obj_16matrix_ebb_dense_PyRectangle *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getLength", 0);

  /* "matrix_ebb_dense.pyx":20
 *         del self.thisptr
 *     def getLength(self):
 *         return self.thisptr.getLength()             # <<<<<<<<<<<<<<
 *     def getHeight(self):
 *         return self.thisptr.getHeight()
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->thisptr->getLength()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.PyRectangle.getLength", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_16matrix_ebb_dense_11PyRectangle_7getHeight(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_16matrix_ebb_dense_11PyRectangle_7getHeight(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getHeight (wrapper)", 0);
  __pyx_r = __pyx_pf_16matrix_ebb_dense_11PyRectangle_6getHeight(((struct __pyx_obj_16matrix_ebb_dense_PyRectangle *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":21
 *     def getLength(self):
 *         return self.thisptr.getLength()
 *     def getHeight(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.getHeight()
 *     def getArea(self):
 */

static PyObject *__pyx_pf_16matrix_ebb_dense_11PyRectangle_6getHeight(struct __pyx_obj_16matrix_ebb_dense_PyRectangle *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getHeight", 0);

  /* "matrix_ebb_dense.pyx":22
 *         return self.thisptr.getLength()
 *     def getHeight(self):
 *         return self.thisptr.getHeight()             # <<<<<<<<<<<<<<
 *     def getArea(self):
 *         return self.thisptr.getArea()
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->thisptr->getHeight()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.PyRectangle.getHeight", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_16matrix_ebb_dense_11PyRectangle_9getArea(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_16matrix_ebb_dense_11PyRectangle_9getArea(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getArea (wrapper)", 0);
  __pyx_r = __pyx_pf_16matrix_ebb_dense_11PyRectangle_8getArea(((struct __pyx_obj_16matrix_ebb_dense_PyRectangle *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":23
 *     def getHeight(self):
 *         return self.thisptr.getHeight()
 *     def getArea(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.getArea()
 *     def move(self, dx, dy):
 */

static PyObject *__pyx_pf_16matrix_ebb_dense_11PyRectangle_8getArea(struct __pyx_obj_16matrix_ebb_dense_PyRectangle *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getArea", 0);

  /* "matrix_ebb_dense.pyx":24
 *         return self.thisptr.getHeight()
 *     def getArea(self):
 *         return self.thisptr.getArea()             # <<<<<<<<<<<<<<
 *     def move(self, dx, dy):
 *         self.thisptr.move(dx, dy)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->thisptr->getArea()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.PyRectangle.getArea", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_16matrix_ebb_dense_11PyRectangle_11move(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_16matrix_ebb_dense_11PyRectangle_11move(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_dx = 0;
  PyObject *__pyx_v_dy = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__dx,&__pyx_n_s__dy,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__dx)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__dy)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("move", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "move") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_dx = values[0];
    __pyx_v_dy = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("matrix_ebb_dense.PyRectangle.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_16matrix_ebb_dense_11PyRectangle_10move(((struct __pyx_obj_16matrix_ebb_dense_PyRectangle *)__pyx_v_self), __pyx_v_dx, __pyx_v_dy);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":25
 *     def getArea(self):
 *         return self.thisptr.getArea()
 *     def move(self, dx, dy):             # <<<<<<<<<<<<<<
 *         self.thisptr.move(dx, dy)
 * 
 */

static PyObject *__pyx_pf_16matrix_ebb_dense_11PyRectangle_10move(struct __pyx_obj_16matrix_ebb_dense_PyRectangle *__pyx_v_self, PyObject *__pyx_v_dx, PyObject *__pyx_v_dy) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move", 0);

  /* "matrix_ebb_dense.pyx":26
 *         return self.thisptr.getArea()
 *     def move(self, dx, dy):
 *         self.thisptr.move(dx, dy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_dx); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_dy); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->thisptr->move(__pyx_t_1, __pyx_t_2);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("matrix_ebb_dense.PyRectangle.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_parent = 0;
  CYTHON_UNUSED PyObject *__pyx_v_entries = 0;
  CYTHON_UNUSED PyObject *__pyx_v_coerce = 0;
  CYTHON_UNUSED PyObject *__pyx_v_copy = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__parent,&__pyx_n_s__entries,&__pyx_n_s__coerce,&__pyx_n_s__copy,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__parent)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__entries)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__coerce)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__copy)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_parent = values[0];
    __pyx_v_entries = values[1];
    __pyx_v_coerce = values[2];
    __pyx_v_copy = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense___cinit__(((struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *)__pyx_v_self), __pyx_v_parent, __pyx_v_entries, __pyx_v_coerce, __pyx_v_copy);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":49
 *     # x * def _unpickle
 *     ########################################################################
 *     def __cinit__(self, parent, entries, coerce, copy):             # <<<<<<<<<<<<<<
 *         self._parent = parent
 *         self._base_ring = ZZ
 */

static int __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense___cinit__(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self, PyObject *__pyx_v_parent, CYTHON_UNUSED PyObject *__pyx_v_entries, CYTHON_UNUSED PyObject *__pyx_v_coerce, CYTHON_UNUSED PyObject *__pyx_v_copy) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "matrix_ebb_dense.pyx":50
 *     ########################################################################
 *     def __cinit__(self, parent, entries, coerce, copy):
 *         self._parent = parent             # <<<<<<<<<<<<<<
 *         self._base_ring = ZZ
 *         self._nrows = parent.nrows()
 */
  if (!(likely(((__pyx_v_parent) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_parent, __pyx_ptype_4sage_9structure_6parent_Parent))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_parent);
  __Pyx_GIVEREF(__pyx_v_parent);
  __Pyx_GOTREF(__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base._parent);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base._parent));
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base._parent = ((struct __pyx_obj_4sage_9structure_6parent_Parent *)__pyx_v_parent);

  /* "matrix_ebb_dense.pyx":51
 *     def __cinit__(self, parent, entries, coerce, copy):
 *         self._parent = parent
 *         self._base_ring = ZZ             # <<<<<<<<<<<<<<
 *         self._nrows = parent.nrows()
 *         self._ncols = parent.ncols()
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__ZZ); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base._base_ring);
  __Pyx_DECREF(__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base._base_ring);
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base._base_ring = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "matrix_ebb_dense.pyx":52
 *         self._parent = parent
 *         self._base_ring = ZZ
 *         self._nrows = parent.nrows()             # <<<<<<<<<<<<<<
 *         self._ncols = parent.ncols()
 * 	# allocate ebb
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_parent, __pyx_n_s__nrows); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base._nrows = __pyx_t_3;

  /* "matrix_ebb_dense.pyx":53
 *         self._base_ring = ZZ
 *         self._nrows = parent.nrows()
 *         self._ncols = parent.ncols()             # <<<<<<<<<<<<<<
 * 	# allocate ebb
 *         raise RuntimeError("__cinit__")
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_parent, __pyx_n_s__ncols); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base._ncols = __pyx_t_3;

  /* "matrix_ebb_dense.pyx":55
 *         self._ncols = parent.ncols()
 * 	# allocate ebb
 *         raise RuntimeError("__cinit__")             # <<<<<<<<<<<<<<
 * 
 *     def __copy__(self):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_1), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_3__copy__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_3__copy__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__copy__ (wrapper)", 0);
  __pyx_r = __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_2__copy__(((struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":57
 *         raise RuntimeError("__cinit__")
 * 
 *     def __copy__(self):             # <<<<<<<<<<<<<<
 *         raise RuntimeError("__copy__")
 * 
 */

static PyObject *__pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_2__copy__(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__copy__", 0);

  /* "matrix_ebb_dense.pyx":58
 * 
 *     def __copy__(self):
 *         raise RuntimeError("__copy__")             # <<<<<<<<<<<<<<
 * 
 *     def __hash__(self):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense.__copy__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static Py_hash_t __pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_5__hash__(PyObject *__pyx_v_self); /*proto*/
static Py_hash_t __pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_5__hash__(PyObject *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__hash__ (wrapper)", 0);
  __pyx_r = __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_4__hash__(((struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":60
 *         raise RuntimeError("__copy__")
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         raise RuntimeError("__hash__")
 * 
 */

static Py_hash_t __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_4__hash__(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__hash__", 0);

  /* "matrix_ebb_dense.pyx":61
 * 
 *     def __hash__(self):
 *         raise RuntimeError("__hash__")             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_3), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense.__hash__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  if (unlikely(__pyx_r == -1) && !PyErr_Occurred()) __pyx_r = -2;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_7__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_7__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_6__dealloc__(((struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "matrix_ebb_dense.pyx":63
 *         raise RuntimeError("__hash__")
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         raise RuntimeError("__dealloc__")
 * 
 */

static void __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_6__dealloc__(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "matrix_ebb_dense.pyx":64
 * 
 *     def __dealloc__(self):
 *         raise RuntimeError("__dealloc__")             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, parent, entries, copy, coerce):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_4), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_9__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_9__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_parent = 0;
  CYTHON_UNUSED PyObject *__pyx_v_entries = 0;
  CYTHON_UNUSED PyObject *__pyx_v_copy = 0;
  CYTHON_UNUSED PyObject *__pyx_v_coerce = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__parent,&__pyx_n_s__entries,&__pyx_n_s__copy,&__pyx_n_s__coerce,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__parent)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__entries)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__copy)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__coerce)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_parent = values[0];
    __pyx_v_entries = values[1];
    __pyx_v_copy = values[2];
    __pyx_v_coerce = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_8__init__(((struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *)__pyx_v_self), __pyx_v_parent, __pyx_v_entries, __pyx_v_copy, __pyx_v_coerce);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":66
 *         raise RuntimeError("__dealloc__")
 * 
 *     def __init__(self, parent, entries, copy, coerce):             # <<<<<<<<<<<<<<
 *         raise RuntimeError("__init__")
 * 
 */

static int __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_8__init__(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_parent, CYTHON_UNUSED PyObject *__pyx_v_entries, CYTHON_UNUSED PyObject *__pyx_v_copy, CYTHON_UNUSED PyObject *__pyx_v_coerce) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "matrix_ebb_dense.pyx":67
 * 
 *     def __init__(self, parent, entries, copy, coerce):
 *         raise RuntimeError("__init__")             # <<<<<<<<<<<<<<
 * 
 *     cdef set_unsafe(self, Py_ssize_t i, Py_ssize_t j, value):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":69
 *         raise RuntimeError("__init__")
 * 
 *     cdef set_unsafe(self, Py_ssize_t i, Py_ssize_t j, value):             # <<<<<<<<<<<<<<
 *         raise RuntimeError("set_unsafe")
 * 
 */

static PyObject *__pyx_f_16matrix_ebb_dense_16Matrix_ebb_dense_set_unsafe(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self, CYTHON_UNUSED Py_ssize_t __pyx_v_i, CYTHON_UNUSED Py_ssize_t __pyx_v_j, CYTHON_UNUSED PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_unsafe", 0);

  /* "matrix_ebb_dense.pyx":70
 * 
 *     cdef set_unsafe(self, Py_ssize_t i, Py_ssize_t j, value):
 *         raise RuntimeError("set_unsafe")             # <<<<<<<<<<<<<<
 * 
 *     cdef get_unsafe(self, Py_ssize_t i, Py_ssize_t j):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_6), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense.set_unsafe", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":72
 *         raise RuntimeError("set_unsafe")
 * 
 *     cdef get_unsafe(self, Py_ssize_t i, Py_ssize_t j):             # <<<<<<<<<<<<<<
 *         raise RuntimeError("get_unsafe")
 * 
 */

static PyObject *__pyx_f_16matrix_ebb_dense_16Matrix_ebb_dense_get_unsafe(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self, CYTHON_UNUSED Py_ssize_t __pyx_v_i, CYTHON_UNUSED Py_ssize_t __pyx_v_j) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_unsafe", 0);

  /* "matrix_ebb_dense.pyx":73
 * 
 *     cdef get_unsafe(self, Py_ssize_t i, Py_ssize_t j):
 *         raise RuntimeError("get_unsafe")             # <<<<<<<<<<<<<<
 * 
 *     def _pickle(self):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_7), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense.get_unsafe", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_11_pickle(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_11_pickle(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_pickle (wrapper)", 0);
  __pyx_r = __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_10_pickle(((struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":75
 *         raise RuntimeError("get_unsafe")
 * 
 *     def _pickle(self):             # <<<<<<<<<<<<<<
 *         raise RuntimeError("_pickle")
 * 
 */

static PyObject *__pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_10_pickle(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_pickle", 0);

  /* "matrix_ebb_dense.pyx":76
 * 
 *     def _pickle(self):
 *         raise RuntimeError("_pickle")             # <<<<<<<<<<<<<<
 * 
 *     cdef _pickle_version0(self):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_8), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense._pickle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":78
 *         raise RuntimeError("_pickle")
 * 
 *     cdef _pickle_version0(self):             # <<<<<<<<<<<<<<
 *         raise RuntimeError("_pickle_version0")
 * 
 */

static PyObject *__pyx_f_16matrix_ebb_dense_16Matrix_ebb_dense__pickle_version0(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_pickle_version0", 0);

  /* "matrix_ebb_dense.pyx":79
 * 
 *     cdef _pickle_version0(self):
 *         raise RuntimeError("_pickle_version0")             # <<<<<<<<<<<<<<
 * 
 *     cpdef _export_as_string(self, int base=10):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_9), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense._pickle_version0", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":81
 *         raise RuntimeError("_pickle_version0")
 * 
 *     cpdef _export_as_string(self, int base=10):             # <<<<<<<<<<<<<<
 *         raise RuntimeError("_export_as_string")
 * 
 */

static PyObject *__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_13_export_as_string(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_16matrix_ebb_dense_16Matrix_ebb_dense__export_as_string(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_16matrix_ebb_dense_16Matrix_ebb_dense__export_as_string *__pyx_optional_args) {
  int __pyx_v_base = ((int)10);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_export_as_string", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_base = __pyx_optional_args->base;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s___export_as_string); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_13_export_as_string)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyInt_FromLong(__pyx_v_base); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "matrix_ebb_dense.pyx":82
 * 
 *     cpdef _export_as_string(self, int base=10):
 *         raise RuntimeError("_export_as_string")             # <<<<<<<<<<<<<<
 * 
 *     def _unpickle(self, data, int version):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_10), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense._export_as_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_13_export_as_string(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_13_export_as_string(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_base;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_export_as_string (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__base,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__base);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_export_as_string") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_base = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_base == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_base = ((int)10);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_export_as_string", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense._export_as_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_12_export_as_string(((struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *)__pyx_v_self), __pyx_v_base);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":81
 *         raise RuntimeError("_pickle_version0")
 * 
 *     cpdef _export_as_string(self, int base=10):             # <<<<<<<<<<<<<<
 *         raise RuntimeError("_export_as_string")
 * 
 */

static PyObject *__pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_12_export_as_string(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self, int __pyx_v_base) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_16matrix_ebb_dense_16Matrix_ebb_dense__export_as_string __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_export_as_string", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.base = __pyx_v_base;
  __pyx_t_1 = ((struct __pyx_vtabstruct_16matrix_ebb_dense_Matrix_ebb_dense *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->_export_as_string(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense._export_as_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_15_unpickle(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_15_unpickle(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_data = 0;
  CYTHON_UNUSED int __pyx_v_version;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_unpickle (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__data,&__pyx_n_s__version,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__data)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__version)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_unpickle", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_unpickle") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_data = values[0];
    __pyx_v_version = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_version == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_unpickle", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense._unpickle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_14_unpickle(((struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *)__pyx_v_self), __pyx_v_data, __pyx_v_version);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":84
 *         raise RuntimeError("_export_as_string")
 * 
 *     def _unpickle(self, data, int version):             # <<<<<<<<<<<<<<
 *         raise RuntimeError("_unpickle")
 * 
 */

static PyObject *__pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_14_unpickle(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_data, CYTHON_UNUSED int __pyx_v_version) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_unpickle", 0);

  /* "matrix_ebb_dense.pyx":85
 * 
 *     def _unpickle(self, data, int version):
 *         raise RuntimeError("_unpickle")             # <<<<<<<<<<<<<<
 * 
 *     cdef _unpickle_version0(self, data):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_11), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense._unpickle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":87
 *         raise RuntimeError("_unpickle")
 * 
 *     cdef _unpickle_version0(self, data):             # <<<<<<<<<<<<<<
 *         raise RuntimeError("_unpickle_version0")
 * 
 */

static PyObject *__pyx_f_16matrix_ebb_dense_16Matrix_ebb_dense__unpickle_version0(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_unpickle_version0", 0);

  /* "matrix_ebb_dense.pyx":88
 * 
 *     cdef _unpickle_version0(self, data):
 *         raise RuntimeError("_unpickle_version0")             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Matrix self, right, int op):  # always need for mysterious reasons.
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_12), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense._unpickle_version0", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_17__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_right, int __pyx_v_op); /*proto*/
static PyObject *__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_17__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_right, int __pyx_v_op) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4sage_6matrix_6matrix_Matrix, 1, "self", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_16__richcmp__(((struct __pyx_obj_4sage_6matrix_6matrix_Matrix *)__pyx_v_self), ((PyObject *)__pyx_v_right), ((int)__pyx_v_op));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":90
 *         raise RuntimeError("_unpickle_version0")
 * 
 *     def __richcmp__(Matrix self, right, int op):  # always need for mysterious reasons.             # <<<<<<<<<<<<<<
 *         return self._richcmp(right, op)
 * 
 */

static PyObject *__pyx_pf_16matrix_ebb_dense_16Matrix_ebb_dense_16__richcmp__(struct __pyx_obj_4sage_6matrix_6matrix_Matrix *__pyx_v_self, PyObject *__pyx_v_right, int __pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "matrix_ebb_dense.pyx":91
 * 
 *     def __richcmp__(Matrix self, right, int op):  # always need for mysterious reasons.
 *         return self._richcmp(right, op)             # <<<<<<<<<<<<<<
 * 
 *     ########################################################################
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4sage_6matrix_6matrix_Matrix *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base._richcmp(((struct __pyx_obj_4sage_9structure_7element_Element *)__pyx_v_self), __pyx_v_right, __pyx_v_op); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":97
 *     #   These function support the implementation of the level 1 functionality.
 *     ########################################################################
 *     cdef _zero_out_matrix(self):             # <<<<<<<<<<<<<<
 *         raise RuntimeError("_zero_out_matrix")
 * 
 */

static PyObject *__pyx_f_16matrix_ebb_dense_16Matrix_ebb_dense__zero_out_matrix(CYTHON_UNUSED struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_zero_out_matrix", 0);

  /* "matrix_ebb_dense.pyx":98
 *     ########################################################################
 *     cdef _zero_out_matrix(self):
 *         raise RuntimeError("_zero_out_matrix")             # <<<<<<<<<<<<<<
 * 
 *     cdef _new_unitialized_matrix(self, Py_ssize_t nrows, Py_ssize_t ncols):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_13), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense._zero_out_matrix", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "matrix_ebb_dense.pyx":100
 *         raise RuntimeError("_zero_out_matrix")
 * 
 *     cdef _new_unitialized_matrix(self, Py_ssize_t nrows, Py_ssize_t ncols):             # <<<<<<<<<<<<<<
 *         """
 *         Return a new matrix over the integers with the given number of rows
 */

static PyObject *__pyx_f_16matrix_ebb_dense_16Matrix_ebb_dense__new_unitialized_matrix(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *__pyx_v_self, Py_ssize_t __pyx_v_nrows, Py_ssize_t __pyx_v_ncols) {
  PyObject *__pyx_v_P = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_new_unitialized_matrix", 0);

  /* "matrix_ebb_dense.pyx":106
 *         entries have not yet been filled in.
 *         """
 *         P = self._parent.matrix_space(nrows, ncols)             # <<<<<<<<<<<<<<
 *         return Matrix_ebb_dense.__new__(Matrix_ebb_dense, P, None, None, None)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base._parent), __pyx_n_s__matrix_space); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_v_nrows); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_v_ncols); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_v_P = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "matrix_ebb_dense.pyx":107
 *         """
 *         P = self._parent.matrix_space(nrows, ncols)
 *         return Matrix_ebb_dense.__new__(Matrix_ebb_dense, P, None, None, None)             # <<<<<<<<<<<<<<
 * 
 *     ########################################################################
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_P);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_P);
  __Pyx_GIVEREF(__pyx_v_P);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_3, 1, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_3, 2, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_3, 3, Py_None);
  __Pyx_GIVEREF(Py_None);
  __pyx_t_4 = __pyx_tp_new_16matrix_ebb_dense_Matrix_ebb_dense(((PyTypeObject *)((PyObject*)__pyx_ptype_16matrix_ebb_dense_Matrix_ebb_dense)), ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("matrix_ebb_dense.Matrix_ebb_dense._new_unitialized_matrix", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_P);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_16matrix_ebb_dense_PyRectangle(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_16matrix_ebb_dense_11PyRectangle_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_16matrix_ebb_dense_PyRectangle(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_16matrix_ebb_dense_11PyRectangle_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_16matrix_ebb_dense_PyRectangle[] = {
  {__Pyx_NAMESTR("getLength"), (PyCFunction)__pyx_pw_16matrix_ebb_dense_11PyRectangle_5getLength, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("getHeight"), (PyCFunction)__pyx_pw_16matrix_ebb_dense_11PyRectangle_7getHeight, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("getArea"), (PyCFunction)__pyx_pw_16matrix_ebb_dense_11PyRectangle_9getArea, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("move"), (PyCFunction)__pyx_pw_16matrix_ebb_dense_11PyRectangle_11move, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_16matrix_ebb_dense_PyRectangle = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("matrix_ebb_dense.PyRectangle"), /*tp_name*/
  sizeof(struct __pyx_obj_16matrix_ebb_dense_PyRectangle), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_16matrix_ebb_dense_PyRectangle, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_16matrix_ebb_dense_PyRectangle, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_16matrix_ebb_dense_PyRectangle, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_16matrix_ebb_dense_Matrix_ebb_dense __pyx_vtable_16matrix_ebb_dense_Matrix_ebb_dense;

static PyObject *__pyx_tp_new_16matrix_ebb_dense_Matrix_ebb_dense(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *p;
  PyObject *o = __pyx_ptype_4sage_6matrix_12matrix_dense_Matrix_dense->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *)o);
  p->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4sage_9structure_7element_Element*)__pyx_vtabptr_16matrix_ebb_dense_Matrix_ebb_dense;
  if (unlikely(__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_16matrix_ebb_dense_Matrix_ebb_dense(PyObject *o) {
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_7__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_4sage_6matrix_12matrix_dense_Matrix_dense)) __pyx_ptype_4sage_6matrix_12matrix_dense_Matrix_dense->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_16matrix_ebb_dense_Matrix_ebb_dense);
}

static int __pyx_tp_traverse_16matrix_ebb_dense_Matrix_ebb_dense(PyObject *o, visitproc v, void *a) {
  int e;
  e = ((likely(__pyx_ptype_4sage_6matrix_12matrix_dense_Matrix_dense)) ? ((__pyx_ptype_4sage_6matrix_12matrix_dense_Matrix_dense->tp_traverse) ? __pyx_ptype_4sage_6matrix_12matrix_dense_Matrix_dense->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_16matrix_ebb_dense_Matrix_ebb_dense)); if (e) return e;
  return 0;
}

static int __pyx_tp_clear_16matrix_ebb_dense_Matrix_ebb_dense(PyObject *o) {
  if (likely(__pyx_ptype_4sage_6matrix_12matrix_dense_Matrix_dense)) { if (__pyx_ptype_4sage_6matrix_12matrix_dense_Matrix_dense->tp_clear) __pyx_ptype_4sage_6matrix_12matrix_dense_Matrix_dense->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_16matrix_ebb_dense_Matrix_ebb_dense);
  return 0;
}

static PyMethodDef __pyx_methods_16matrix_ebb_dense_Matrix_ebb_dense[] = {
  {__Pyx_NAMESTR("__copy__"), (PyCFunction)__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_3__copy__, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("_pickle"), (PyCFunction)__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_11_pickle, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("_export_as_string"), (PyCFunction)__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_13_export_as_string, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("_unpickle"), (PyCFunction)__pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_15_unpickle, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_16matrix_ebb_dense_Matrix_ebb_dense = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("matrix_ebb_dense.Matrix_ebb_dense"), /*tp_name*/
  sizeof(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_16matrix_ebb_dense_Matrix_ebb_dense, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  __pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_5__hash__, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_16matrix_ebb_dense_Matrix_ebb_dense, /*tp_traverse*/
  __pyx_tp_clear_16matrix_ebb_dense_Matrix_ebb_dense, /*tp_clear*/
  __pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_17__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_16matrix_ebb_dense_Matrix_ebb_dense, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_16matrix_ebb_dense_16Matrix_ebb_dense_9__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_16matrix_ebb_dense_Matrix_ebb_dense, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    __Pyx_NAMESTR("matrix_ebb_dense"),
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_14, __pyx_k_14, sizeof(__pyx_k_14), 0, 0, 1, 1},
  {&__pyx_n_s_15, __pyx_k_15, sizeof(__pyx_k_15), 0, 0, 1, 1},
  {&__pyx_n_s_16, __pyx_k_16, sizeof(__pyx_k_16), 0, 0, 1, 1},
  {&__pyx_n_s__IntegerRing_class, __pyx_k__IntegerRing_class, sizeof(__pyx_k__IntegerRing_class), 0, 0, 1, 1},
  {&__pyx_n_s__QQ, __pyx_k__QQ, sizeof(__pyx_k__QQ), 0, 0, 1, 1},
  {&__pyx_n_s__RDF, __pyx_k__RDF, sizeof(__pyx_k__RDF), 0, 0, 1, 1},
  {&__pyx_n_s__RuntimeError, __pyx_k__RuntimeError, sizeof(__pyx_k__RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s__ZZ, __pyx_k__ZZ, sizeof(__pyx_k__ZZ), 0, 0, 1, 1},
  {&__pyx_n_s____cinit__, __pyx_k____cinit__, sizeof(__pyx_k____cinit__), 0, 0, 1, 1},
  {&__pyx_n_s____copy__, __pyx_k____copy__, sizeof(__pyx_k____copy__), 0, 0, 1, 1},
  {&__pyx_n_s____dealloc__, __pyx_k____dealloc__, sizeof(__pyx_k____dealloc__), 0, 0, 1, 1},
  {&__pyx_n_s____hash__, __pyx_k____hash__, sizeof(__pyx_k____hash__), 0, 0, 1, 1},
  {&__pyx_n_s____import__, __pyx_k____import__, sizeof(__pyx_k____import__), 0, 0, 1, 1},
  {&__pyx_n_s____init__, __pyx_k____init__, sizeof(__pyx_k____init__), 0, 0, 1, 1},
  {&__pyx_n_s____main__, __pyx_k____main__, sizeof(__pyx_k____main__), 0, 0, 1, 1},
  {&__pyx_n_s____pyx_vtable__, __pyx_k____pyx_vtable__, sizeof(__pyx_k____pyx_vtable__), 0, 0, 1, 1},
  {&__pyx_n_s____test__, __pyx_k____test__, sizeof(__pyx_k____test__), 0, 0, 1, 1},
  {&__pyx_n_s___export_as_string, __pyx_k___export_as_string, sizeof(__pyx_k___export_as_string), 0, 0, 1, 1},
  {&__pyx_n_s___pickle, __pyx_k___pickle, sizeof(__pyx_k___pickle), 0, 0, 1, 1},
  {&__pyx_n_s___pickle_version0, __pyx_k___pickle_version0, sizeof(__pyx_k___pickle_version0), 0, 0, 1, 1},
  {&__pyx_n_s___unpickle, __pyx_k___unpickle, sizeof(__pyx_k___unpickle), 0, 0, 1, 1},
  {&__pyx_n_s___unpickle_version0, __pyx_k___unpickle_version0, sizeof(__pyx_k___unpickle_version0), 0, 0, 1, 1},
  {&__pyx_n_s___zero_out_matrix, __pyx_k___zero_out_matrix, sizeof(__pyx_k___zero_out_matrix), 0, 0, 1, 1},
  {&__pyx_n_s__base, __pyx_k__base, sizeof(__pyx_k__base), 0, 0, 1, 1},
  {&__pyx_n_s__coerce, __pyx_k__coerce, sizeof(__pyx_k__coerce), 0, 0, 1, 1},
  {&__pyx_n_s__copy, __pyx_k__copy, sizeof(__pyx_k__copy), 0, 0, 1, 1},
  {&__pyx_n_s__data, __pyx_k__data, sizeof(__pyx_k__data), 0, 0, 1, 1},
  {&__pyx_n_s__dx, __pyx_k__dx, sizeof(__pyx_k__dx), 0, 0, 1, 1},
  {&__pyx_n_s__dy, __pyx_k__dy, sizeof(__pyx_k__dy), 0, 0, 1, 1},
  {&__pyx_n_s__entries, __pyx_k__entries, sizeof(__pyx_k__entries), 0, 0, 1, 1},
  {&__pyx_n_s__get_unsafe, __pyx_k__get_unsafe, sizeof(__pyx_k__get_unsafe), 0, 0, 1, 1},
  {&__pyx_n_s__matrix_space, __pyx_k__matrix_space, sizeof(__pyx_k__matrix_space), 0, 0, 1, 1},
  {&__pyx_n_s__ncols, __pyx_k__ncols, sizeof(__pyx_k__ncols), 0, 0, 1, 1},
  {&__pyx_n_s__nrows, __pyx_k__nrows, sizeof(__pyx_k__nrows), 0, 0, 1, 1},
  {&__pyx_n_s__parent, __pyx_k__parent, sizeof(__pyx_k__parent), 0, 0, 1, 1},
  {&__pyx_n_s__set_unsafe, __pyx_k__set_unsafe, sizeof(__pyx_k__set_unsafe), 0, 0, 1, 1},
  {&__pyx_n_s__version, __pyx_k__version, sizeof(__pyx_k__version), 0, 0, 1, 1},
  {&__pyx_n_s__x0, __pyx_k__x0, sizeof(__pyx_k__x0), 0, 0, 1, 1},
  {&__pyx_n_s__x1, __pyx_k__x1, sizeof(__pyx_k__x1), 0, 0, 1, 1},
  {&__pyx_n_s__y0, __pyx_k__y0, sizeof(__pyx_k__y0), 0, 0, 1, 1},
  {&__pyx_n_s__y1, __pyx_k__y1, sizeof(__pyx_k__y1), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s__RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "matrix_ebb_dense.pyx":55
 *         self._ncols = parent.ncols()
 * 	# allocate ebb
 *         raise RuntimeError("__cinit__")             # <<<<<<<<<<<<<<
 * 
 *     def __copy__(self):
 */
  __pyx_k_tuple_1 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s____cinit__)); if (unlikely(!__pyx_k_tuple_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_1);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_1));

  /* "matrix_ebb_dense.pyx":58
 * 
 *     def __copy__(self):
 *         raise RuntimeError("__copy__")             # <<<<<<<<<<<<<<
 * 
 *     def __hash__(self):
 */
  __pyx_k_tuple_2 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s____copy__)); if (unlikely(!__pyx_k_tuple_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_2);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_2));

  /* "matrix_ebb_dense.pyx":61
 * 
 *     def __hash__(self):
 *         raise RuntimeError("__hash__")             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_k_tuple_3 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s____hash__)); if (unlikely(!__pyx_k_tuple_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_3);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_3));

  /* "matrix_ebb_dense.pyx":64
 * 
 *     def __dealloc__(self):
 *         raise RuntimeError("__dealloc__")             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, parent, entries, copy, coerce):
 */
  __pyx_k_tuple_4 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s____dealloc__)); if (unlikely(!__pyx_k_tuple_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_4);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_4));

  /* "matrix_ebb_dense.pyx":67
 * 
 *     def __init__(self, parent, entries, copy, coerce):
 *         raise RuntimeError("__init__")             # <<<<<<<<<<<<<<
 * 
 *     cdef set_unsafe(self, Py_ssize_t i, Py_ssize_t j, value):
 */
  __pyx_k_tuple_5 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s____init__)); if (unlikely(!__pyx_k_tuple_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_5);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_5));

  /* "matrix_ebb_dense.pyx":70
 * 
 *     cdef set_unsafe(self, Py_ssize_t i, Py_ssize_t j, value):
 *         raise RuntimeError("set_unsafe")             # <<<<<<<<<<<<<<
 * 
 *     cdef get_unsafe(self, Py_ssize_t i, Py_ssize_t j):
 */
  __pyx_k_tuple_6 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s__set_unsafe)); if (unlikely(!__pyx_k_tuple_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_6);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_6));

  /* "matrix_ebb_dense.pyx":73
 * 
 *     cdef get_unsafe(self, Py_ssize_t i, Py_ssize_t j):
 *         raise RuntimeError("get_unsafe")             # <<<<<<<<<<<<<<
 * 
 *     def _pickle(self):
 */
  __pyx_k_tuple_7 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s__get_unsafe)); if (unlikely(!__pyx_k_tuple_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_7);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_7));

  /* "matrix_ebb_dense.pyx":76
 * 
 *     def _pickle(self):
 *         raise RuntimeError("_pickle")             # <<<<<<<<<<<<<<
 * 
 *     cdef _pickle_version0(self):
 */
  __pyx_k_tuple_8 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s___pickle)); if (unlikely(!__pyx_k_tuple_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_8);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_8));

  /* "matrix_ebb_dense.pyx":79
 * 
 *     cdef _pickle_version0(self):
 *         raise RuntimeError("_pickle_version0")             # <<<<<<<<<<<<<<
 * 
 *     cpdef _export_as_string(self, int base=10):
 */
  __pyx_k_tuple_9 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s___pickle_version0)); if (unlikely(!__pyx_k_tuple_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_9);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_9));

  /* "matrix_ebb_dense.pyx":82
 * 
 *     cpdef _export_as_string(self, int base=10):
 *         raise RuntimeError("_export_as_string")             # <<<<<<<<<<<<<<
 * 
 *     def _unpickle(self, data, int version):
 */
  __pyx_k_tuple_10 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s___export_as_string)); if (unlikely(!__pyx_k_tuple_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_10);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_10));

  /* "matrix_ebb_dense.pyx":85
 * 
 *     def _unpickle(self, data, int version):
 *         raise RuntimeError("_unpickle")             # <<<<<<<<<<<<<<
 * 
 *     cdef _unpickle_version0(self, data):
 */
  __pyx_k_tuple_11 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s___unpickle)); if (unlikely(!__pyx_k_tuple_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_11);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_11));

  /* "matrix_ebb_dense.pyx":88
 * 
 *     cdef _unpickle_version0(self, data):
 *         raise RuntimeError("_unpickle_version0")             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Matrix self, right, int op):  # always need for mysterious reasons.
 */
  __pyx_k_tuple_12 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s___unpickle_version0)); if (unlikely(!__pyx_k_tuple_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_12);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_12));

  /* "matrix_ebb_dense.pyx":98
 *     ########################################################################
 *     cdef _zero_out_matrix(self):
 *         raise RuntimeError("_zero_out_matrix")             # <<<<<<<<<<<<<<
 * 
 *     cdef _new_unitialized_matrix(self, Py_ssize_t nrows, Py_ssize_t ncols):
 */
  __pyx_k_tuple_13 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s___zero_out_matrix)); if (unlikely(!__pyx_k_tuple_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_13);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_13));
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initmatrix_ebb_dense(void); /*proto*/
PyMODINIT_FUNC initmatrix_ebb_dense(void)
#else
PyMODINIT_FUNC PyInit_matrix_ebb_dense(void); /*proto*/
PyMODINIT_FUNC PyInit_matrix_ebb_dense(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_matrix_ebb_dense(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("matrix_ebb_dense"), __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "matrix_ebb_dense")) {
      if (unlikely(PyDict_SetItemString(modules, "matrix_ebb_dense", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME)); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_matrix_ebb_dense) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_n_s____main__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_16matrix_ebb_dense_PyRectangle) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PyRectangle", (PyObject *)&__pyx_type_16matrix_ebb_dense_PyRectangle) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_16matrix_ebb_dense_PyRectangle = &__pyx_type_16matrix_ebb_dense_PyRectangle;
  __pyx_ptype_4sage_6matrix_12matrix_dense_Matrix_dense = __Pyx_ImportType("sage.matrix.matrix_dense", "Matrix_dense", sizeof(struct __pyx_obj_4sage_6matrix_12matrix_dense_Matrix_dense), 1); if (unlikely(!__pyx_ptype_4sage_6matrix_12matrix_dense_Matrix_dense)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_6matrix_12matrix_dense_Matrix_dense = (struct __pyx_vtabstruct_4sage_6matrix_12matrix_dense_Matrix_dense*)__Pyx_GetVtable(__pyx_ptype_4sage_6matrix_12matrix_dense_Matrix_dense->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_6matrix_12matrix_dense_Matrix_dense)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_16matrix_ebb_dense_Matrix_ebb_dense = &__pyx_vtable_16matrix_ebb_dense_Matrix_ebb_dense;
  __pyx_vtable_16matrix_ebb_dense_Matrix_ebb_dense.__pyx_base = *__pyx_vtabptr_4sage_6matrix_12matrix_dense_Matrix_dense;
  __pyx_vtable_16matrix_ebb_dense_Matrix_ebb_dense.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.set_unsafe = (PyObject *(*)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, Py_ssize_t, Py_ssize_t, PyObject *))__pyx_f_16matrix_ebb_dense_16Matrix_ebb_dense_set_unsafe;
  __pyx_vtable_16matrix_ebb_dense_Matrix_ebb_dense.__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.get_unsafe = (PyObject *(*)(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix *, Py_ssize_t, Py_ssize_t))__pyx_f_16matrix_ebb_dense_16Matrix_ebb_dense_get_unsafe;
  __pyx_vtable_16matrix_ebb_dense_Matrix_ebb_dense._zero_out_matrix = (PyObject *(*)(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *))__pyx_f_16matrix_ebb_dense_16Matrix_ebb_dense__zero_out_matrix;
  __pyx_vtable_16matrix_ebb_dense_Matrix_ebb_dense._new_unitialized_matrix = (PyObject *(*)(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *, Py_ssize_t, Py_ssize_t))__pyx_f_16matrix_ebb_dense_16Matrix_ebb_dense__new_unitialized_matrix;
  __pyx_vtable_16matrix_ebb_dense_Matrix_ebb_dense._pickle_version0 = (PyObject *(*)(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *))__pyx_f_16matrix_ebb_dense_16Matrix_ebb_dense__pickle_version0;
  __pyx_vtable_16matrix_ebb_dense_Matrix_ebb_dense._unpickle_version0 = (PyObject *(*)(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *, PyObject *))__pyx_f_16matrix_ebb_dense_16Matrix_ebb_dense__unpickle_version0;
  __pyx_vtable_16matrix_ebb_dense_Matrix_ebb_dense._export_as_string = (PyObject *(*)(struct __pyx_obj_16matrix_ebb_dense_Matrix_ebb_dense *, int __pyx_skip_dispatch, struct __pyx_opt_args_16matrix_ebb_dense_16Matrix_ebb_dense__export_as_string *__pyx_optional_args))__pyx_f_16matrix_ebb_dense_16Matrix_ebb_dense__export_as_string;
  __pyx_type_16matrix_ebb_dense_Matrix_ebb_dense.tp_base = __pyx_ptype_4sage_6matrix_12matrix_dense_Matrix_dense;
  if (PyType_Ready(&__pyx_type_16matrix_ebb_dense_Matrix_ebb_dense) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_16matrix_ebb_dense_Matrix_ebb_dense.tp_dict, __pyx_vtabptr_16matrix_ebb_dense_Matrix_ebb_dense) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Matrix_ebb_dense", (PyObject *)&__pyx_type_16matrix_ebb_dense_Matrix_ebb_dense) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_16matrix_ebb_dense_Matrix_ebb_dense = &__pyx_type_16matrix_ebb_dense_Matrix_ebb_dense;
  /*--- Type import code ---*/
  __pyx_ptype_4sage_9structure_11sage_object_SageObject = __Pyx_ImportType("sage.structure.sage_object", "SageObject", sizeof(struct __pyx_obj_4sage_9structure_11sage_object_SageObject), 1); if (unlikely(!__pyx_ptype_4sage_9structure_11sage_object_SageObject)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_10generators_Generators = __Pyx_ImportType("sage.structure.generators", "Generators", sizeof(struct __pyx_obj_4sage_9structure_10generators_Generators), 1); if (unlikely(!__pyx_ptype_4sage_9structure_10generators_Generators)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_10generators_Generators = (struct __pyx_vtabstruct_4sage_9structure_10generators_Generators*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_10generators_Generators->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_10generators_Generators)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_10generators_Generators_finite = __Pyx_ImportType("sage.structure.generators", "Generators_finite", sizeof(struct __pyx_obj_4sage_9structure_10generators_Generators_finite), 1); if (unlikely(!__pyx_ptype_4sage_9structure_10generators_Generators_finite)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_10generators_Generators_finite = (struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_finite*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_10generators_Generators_finite->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_10generators_Generators_finite)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_10generators_Generators_list = __Pyx_ImportType("sage.structure.generators", "Generators_list", sizeof(struct __pyx_obj_4sage_9structure_10generators_Generators_list), 1); if (unlikely(!__pyx_ptype_4sage_9structure_10generators_Generators_list)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_10generators_Generators_list = (struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_list*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_10generators_Generators_list->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_10generators_Generators_list)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_10generators_Generators_naturals = __Pyx_ImportType("sage.structure.generators", "Generators_naturals", sizeof(struct __pyx_obj_4sage_9structure_10generators_Generators_naturals), 1); if (unlikely(!__pyx_ptype_4sage_9structure_10generators_Generators_naturals)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_10generators_Generators_naturals = (struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_naturals*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_10generators_Generators_naturals->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_10generators_Generators_naturals)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_10generators_Generators_none = __Pyx_ImportType("sage.structure.generators", "Generators_none", sizeof(struct __pyx_obj_4sage_9structure_10generators_Generators_none), 1); if (unlikely(!__pyx_ptype_4sage_9structure_10generators_Generators_none)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_10generators_Generators_none = (struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_none*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_10generators_Generators_none->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_10generators_Generators_none)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_10generators_Generators_lazy_all = __Pyx_ImportType("sage.structure.generators", "Generators_lazy_all", sizeof(struct __pyx_obj_4sage_9structure_10generators_Generators_lazy_all), 1); if (unlikely(!__pyx_ptype_4sage_9structure_10generators_Generators_lazy_all)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_10generators_Generators_lazy_all = (struct __pyx_vtabstruct_4sage_9structure_10generators_Generators_lazy_all*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_10generators_Generators_lazy_all->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_10generators_Generators_lazy_all)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_15category_object_CategoryObject = __Pyx_ImportType("sage.structure.category_object", "CategoryObject", sizeof(struct __pyx_obj_4sage_9structure_15category_object_CategoryObject), 1); if (unlikely(!__pyx_ptype_4sage_9structure_15category_object_CategoryObject)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_11coerce_dict_MonoDict = __Pyx_ImportType("sage.structure.coerce_dict", "MonoDict", sizeof(struct __pyx_obj_4sage_9structure_11coerce_dict_MonoDict), 1); if (unlikely(!__pyx_ptype_4sage_9structure_11coerce_dict_MonoDict)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_11coerce_dict_MonoDict = (struct __pyx_vtabstruct_4sage_9structure_11coerce_dict_MonoDict*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_11coerce_dict_MonoDict->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_11coerce_dict_MonoDict)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_11coerce_dict_MonoDictEraser = __Pyx_ImportType("sage.structure.coerce_dict", "MonoDictEraser", sizeof(struct __pyx_obj_4sage_9structure_11coerce_dict_MonoDictEraser), 1); if (unlikely(!__pyx_ptype_4sage_9structure_11coerce_dict_MonoDictEraser)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_11coerce_dict_TripleDict = __Pyx_ImportType("sage.structure.coerce_dict", "TripleDict", sizeof(struct __pyx_obj_4sage_9structure_11coerce_dict_TripleDict), 1); if (unlikely(!__pyx_ptype_4sage_9structure_11coerce_dict_TripleDict)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_11coerce_dict_TripleDict = (struct __pyx_vtabstruct_4sage_9structure_11coerce_dict_TripleDict*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_11coerce_dict_TripleDict->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_11coerce_dict_TripleDict)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_11coerce_dict_TripleDictEraser = __Pyx_ImportType("sage.structure.coerce_dict", "TripleDictEraser", sizeof(struct __pyx_obj_4sage_9structure_11coerce_dict_TripleDictEraser), 1); if (unlikely(!__pyx_ptype_4sage_9structure_11coerce_dict_TripleDictEraser)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_6parent_Parent = __Pyx_ImportType("sage.structure.parent", "Parent", sizeof(struct __pyx_obj_4sage_9structure_6parent_Parent), 1); if (unlikely(!__pyx_ptype_4sage_9structure_6parent_Parent)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_6parent_Parent = (struct __pyx_vtabstruct_4sage_9structure_6parent_Parent*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_6parent_Parent->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_6parent_Parent)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_10mutability_Mutability = __Pyx_ImportType("sage.structure.mutability", "Mutability", sizeof(struct __pyx_obj_4sage_9structure_10mutability_Mutability), 1); if (unlikely(!__pyx_ptype_4sage_9structure_10mutability_Mutability)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_10mutability_Mutability = (struct __pyx_vtabstruct_4sage_9structure_10mutability_Mutability*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_10mutability_Mutability->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_10mutability_Mutability)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_Element = __Pyx_ImportType("sage.structure.element", "Element", sizeof(struct __pyx_obj_4sage_9structure_7element_Element), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_Element)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_Element = (struct __pyx_vtabstruct_4sage_9structure_7element_Element*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_Element->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_Element)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_ElementWithCachedMethod = __Pyx_ImportType("sage.structure.element", "ElementWithCachedMethod", sizeof(struct __pyx_obj_4sage_9structure_7element_ElementWithCachedMethod), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_ElementWithCachedMethod)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_ElementWithCachedMethod = (struct __pyx_vtabstruct_4sage_9structure_7element_ElementWithCachedMethod*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_ElementWithCachedMethod->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_ElementWithCachedMethod)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_ModuleElement = __Pyx_ImportType("sage.structure.element", "ModuleElement", sizeof(struct __pyx_obj_4sage_9structure_7element_ModuleElement), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_ModuleElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_ModuleElement = (struct __pyx_vtabstruct_4sage_9structure_7element_ModuleElement*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_ModuleElement->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_ModuleElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_RingElement = __Pyx_ImportType("sage.structure.element", "RingElement", sizeof(struct __pyx_obj_4sage_9structure_7element_RingElement), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_RingElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_RingElement = (struct __pyx_vtabstruct_4sage_9structure_7element_RingElement*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_RingElement->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_RingElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_MonoidElement = __Pyx_ImportType("sage.structure.element", "MonoidElement", sizeof(struct __pyx_obj_4sage_9structure_7element_MonoidElement), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_MonoidElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_MonoidElement = (struct __pyx_vtabstruct_4sage_9structure_7element_MonoidElement*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_MonoidElement->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_MonoidElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_MultiplicativeGroupElement = __Pyx_ImportType("sage.structure.element", "MultiplicativeGroupElement", sizeof(struct __pyx_obj_4sage_9structure_7element_MultiplicativeGroupElement), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_MultiplicativeGroupElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_MultiplicativeGroupElement = (struct __pyx_vtabstruct_4sage_9structure_7element_MultiplicativeGroupElement*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_MultiplicativeGroupElement->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_MultiplicativeGroupElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_AdditiveGroupElement = __Pyx_ImportType("sage.structure.element", "AdditiveGroupElement", sizeof(struct __pyx_obj_4sage_9structure_7element_AdditiveGroupElement), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_AdditiveGroupElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_AdditiveGroupElement = (struct __pyx_vtabstruct_4sage_9structure_7element_AdditiveGroupElement*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_AdditiveGroupElement->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_AdditiveGroupElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_CommutativeRingElement = __Pyx_ImportType("sage.structure.element", "CommutativeRingElement", sizeof(struct __pyx_obj_4sage_9structure_7element_CommutativeRingElement), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_CommutativeRingElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_CommutativeRingElement = (struct __pyx_vtabstruct_4sage_9structure_7element_CommutativeRingElement*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_CommutativeRingElement->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_CommutativeRingElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_IntegralDomainElement = __Pyx_ImportType("sage.structure.element", "IntegralDomainElement", sizeof(struct __pyx_obj_4sage_9structure_7element_IntegralDomainElement), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_IntegralDomainElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_IntegralDomainElement = (struct __pyx_vtabstruct_4sage_9structure_7element_IntegralDomainElement*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_IntegralDomainElement->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_IntegralDomainElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_DedekindDomainElement = __Pyx_ImportType("sage.structure.element", "DedekindDomainElement", sizeof(struct __pyx_obj_4sage_9structure_7element_DedekindDomainElement), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_DedekindDomainElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_DedekindDomainElement = (struct __pyx_vtabstruct_4sage_9structure_7element_DedekindDomainElement*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_DedekindDomainElement->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_DedekindDomainElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_PrincipalIdealDomainElement = __Pyx_ImportType("sage.structure.element", "PrincipalIdealDomainElement", sizeof(struct __pyx_obj_4sage_9structure_7element_PrincipalIdealDomainElement), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_PrincipalIdealDomainElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_PrincipalIdealDomainElement = (struct __pyx_vtabstruct_4sage_9structure_7element_PrincipalIdealDomainElement*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_PrincipalIdealDomainElement->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_PrincipalIdealDomainElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_EuclideanDomainElement = __Pyx_ImportType("sage.structure.element", "EuclideanDomainElement", sizeof(struct __pyx_obj_4sage_9structure_7element_EuclideanDomainElement), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_EuclideanDomainElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_EuclideanDomainElement = (struct __pyx_vtabstruct_4sage_9structure_7element_EuclideanDomainElement*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_EuclideanDomainElement->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_EuclideanDomainElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_FieldElement = __Pyx_ImportType("sage.structure.element", "FieldElement", sizeof(struct __pyx_obj_4sage_9structure_7element_FieldElement), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_FieldElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_FieldElement = (struct __pyx_vtabstruct_4sage_9structure_7element_FieldElement*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_FieldElement->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_FieldElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_AlgebraElement = __Pyx_ImportType("sage.structure.element", "AlgebraElement", sizeof(struct __pyx_obj_4sage_9structure_7element_AlgebraElement), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_AlgebraElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_AlgebraElement = (struct __pyx_vtabstruct_4sage_9structure_7element_AlgebraElement*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_AlgebraElement->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_AlgebraElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_CommutativeAlgebraElement = __Pyx_ImportType("sage.structure.element", "CommutativeAlgebraElement", sizeof(struct __pyx_obj_4sage_9structure_7element_CommutativeAlgebraElement), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_CommutativeAlgebraElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_CommutativeAlgebraElement = (struct __pyx_vtabstruct_4sage_9structure_7element_CommutativeAlgebraElement*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_CommutativeAlgebraElement->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_CommutativeAlgebraElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_CommutativeAlgebra = __Pyx_ImportType("sage.structure.element", "CommutativeAlgebra", sizeof(struct __pyx_obj_4sage_9structure_7element_CommutativeAlgebra), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_CommutativeAlgebra)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_CommutativeAlgebra = (struct __pyx_vtabstruct_4sage_9structure_7element_CommutativeAlgebra*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_CommutativeAlgebra->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_CommutativeAlgebra)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_InfinityElement = __Pyx_ImportType("sage.structure.element", "InfinityElement", sizeof(struct __pyx_obj_4sage_9structure_7element_InfinityElement), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_InfinityElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_InfinityElement = (struct __pyx_vtabstruct_4sage_9structure_7element_InfinityElement*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_InfinityElement->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_InfinityElement)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_Vector = __Pyx_ImportType("sage.structure.element", "Vector", sizeof(struct __pyx_obj_4sage_9structure_7element_Vector), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_Vector)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_Vector = (struct __pyx_vtabstruct_4sage_9structure_7element_Vector*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_Vector->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_Vector)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_Matrix = __Pyx_ImportType("sage.structure.element", "Matrix", sizeof(struct __pyx_obj_4sage_9structure_7element_Matrix), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_Matrix)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_Matrix = (struct __pyx_vtabstruct_4sage_9structure_7element_Matrix*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_Matrix->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_Matrix)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_7element_CoercionModel = __Pyx_ImportType("sage.structure.element", "CoercionModel", sizeof(struct __pyx_obj_4sage_9structure_7element_CoercionModel), 1); if (unlikely(!__pyx_ptype_4sage_9structure_7element_CoercionModel)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_7element_CoercionModel = (struct __pyx_vtabstruct_4sage_9structure_7element_CoercionModel*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_7element_CoercionModel->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_7element_CoercionModel)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_6matrix_7matrix0_Matrix = __Pyx_ImportType("sage.matrix.matrix0", "Matrix", sizeof(struct __pyx_obj_4sage_6matrix_7matrix0_Matrix), 1); if (unlikely(!__pyx_ptype_4sage_6matrix_7matrix0_Matrix)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_6matrix_7matrix0_Matrix = (struct __pyx_vtabstruct_4sage_6matrix_7matrix0_Matrix*)__Pyx_GetVtable(__pyx_ptype_4sage_6matrix_7matrix0_Matrix->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_6matrix_7matrix0_Matrix)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_6matrix_7matrix1_Matrix = __Pyx_ImportType("sage.matrix.matrix1", "Matrix", sizeof(struct __pyx_obj_4sage_6matrix_7matrix1_Matrix), 1); if (unlikely(!__pyx_ptype_4sage_6matrix_7matrix1_Matrix)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_6matrix_7matrix1_Matrix = (struct __pyx_vtabstruct_4sage_6matrix_7matrix1_Matrix*)__Pyx_GetVtable(__pyx_ptype_4sage_6matrix_7matrix1_Matrix->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_6matrix_7matrix1_Matrix)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_6matrix_7matrix2_Matrix = __Pyx_ImportType("sage.matrix.matrix2", "Matrix", sizeof(struct __pyx_obj_4sage_6matrix_7matrix2_Matrix), 1); if (unlikely(!__pyx_ptype_4sage_6matrix_7matrix2_Matrix)) {__pyx_filename = __pyx_f[10]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_6matrix_7matrix2_Matrix = (struct __pyx_vtabstruct_4sage_6matrix_7matrix2_Matrix*)__Pyx_GetVtable(__pyx_ptype_4sage_6matrix_7matrix2_Matrix->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_6matrix_7matrix2_Matrix)) {__pyx_filename = __pyx_f[10]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_6matrix_6matrix_Matrix = __Pyx_ImportType("sage.matrix.matrix", "Matrix", sizeof(struct __pyx_obj_4sage_6matrix_6matrix_Matrix), 1); if (unlikely(!__pyx_ptype_4sage_6matrix_6matrix_Matrix)) {__pyx_filename = __pyx_f[11]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_6matrix_6matrix_Matrix = (struct __pyx_vtabstruct_4sage_6matrix_6matrix_Matrix*)__Pyx_GetVtable(__pyx_ptype_4sage_6matrix_6matrix_Matrix->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_6matrix_6matrix_Matrix)) {__pyx_filename = __pyx_f[11]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_7cpython_4bool_bool = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "bool", sizeof(PyBoolObject), 0); if (unlikely(!__pyx_ptype_7cpython_4bool_bool)) {__pyx_filename = __pyx_f[12]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_7cpython_7complex_complex = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "complex", sizeof(PyComplexObject), 0); if (unlikely(!__pyx_ptype_7cpython_7complex_complex)) {__pyx_filename = __pyx_f[13]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_10categories_3map_Map = __Pyx_ImportType("sage.categories.map", "Map", sizeof(struct __pyx_obj_4sage_10categories_3map_Map), 1); if (unlikely(!__pyx_ptype_4sage_10categories_3map_Map)) {__pyx_filename = __pyx_f[14]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_10categories_3map_Map = (struct __pyx_vtabstruct_4sage_10categories_3map_Map*)__Pyx_GetVtable(__pyx_ptype_4sage_10categories_3map_Map->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_10categories_3map_Map)) {__pyx_filename = __pyx_f[14]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_10categories_3map_Section = __Pyx_ImportType("sage.categories.map", "Section", sizeof(struct __pyx_obj_4sage_10categories_3map_Section), 1); if (unlikely(!__pyx_ptype_4sage_10categories_3map_Section)) {__pyx_filename = __pyx_f[14]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_10categories_3map_Section = (struct __pyx_vtabstruct_4sage_10categories_3map_Section*)__Pyx_GetVtable(__pyx_ptype_4sage_10categories_3map_Section->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_10categories_3map_Section)) {__pyx_filename = __pyx_f[14]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_10categories_3map_FormalCompositeMap = __Pyx_ImportType("sage.categories.map", "FormalCompositeMap", sizeof(struct __pyx_obj_4sage_10categories_3map_FormalCompositeMap), 1); if (unlikely(!__pyx_ptype_4sage_10categories_3map_FormalCompositeMap)) {__pyx_filename = __pyx_f[14]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_10categories_3map_FormalCompositeMap = (struct __pyx_vtabstruct_4sage_10categories_3map_FormalCompositeMap*)__Pyx_GetVtable(__pyx_ptype_4sage_10categories_3map_FormalCompositeMap->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_10categories_3map_FormalCompositeMap)) {__pyx_filename = __pyx_f[14]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_10categories_8morphism_Morphism = __Pyx_ImportType("sage.categories.morphism", "Morphism", sizeof(struct __pyx_obj_4sage_10categories_8morphism_Morphism), 1); if (unlikely(!__pyx_ptype_4sage_10categories_8morphism_Morphism)) {__pyx_filename = __pyx_f[15]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_10categories_8morphism_Morphism = (struct __pyx_vtabstruct_4sage_10categories_8morphism_Morphism*)__Pyx_GetVtable(__pyx_ptype_4sage_10categories_8morphism_Morphism->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_10categories_8morphism_Morphism)) {__pyx_filename = __pyx_f[15]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_10categories_8morphism_SetMorphism = __Pyx_ImportType("sage.categories.morphism", "SetMorphism", sizeof(struct __pyx_obj_4sage_10categories_8morphism_SetMorphism), 1); if (unlikely(!__pyx_ptype_4sage_10categories_8morphism_SetMorphism)) {__pyx_filename = __pyx_f[15]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_10categories_8morphism_SetMorphism = (struct __pyx_vtabstruct_4sage_10categories_8morphism_SetMorphism*)__Pyx_GetVtable(__pyx_ptype_4sage_10categories_8morphism_SetMorphism->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_10categories_8morphism_SetMorphism)) {__pyx_filename = __pyx_f[15]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_5rings_7integer_Integer = __Pyx_ImportType("sage.rings.integer", "Integer", sizeof(struct __pyx_obj_4sage_5rings_7integer_Integer), 1); if (unlikely(!__pyx_ptype_4sage_5rings_7integer_Integer)) {__pyx_filename = __pyx_f[16]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_5rings_7integer_Integer = (struct __pyx_vtabstruct_4sage_5rings_7integer_Integer*)__Pyx_GetVtable(__pyx_ptype_4sage_5rings_7integer_Integer->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_5rings_7integer_Integer)) {__pyx_filename = __pyx_f[16]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_5rings_7integer_int_to_Z = __Pyx_ImportType("sage.rings.integer", "int_to_Z", sizeof(struct __pyx_obj_4sage_5rings_7integer_int_to_Z), 1); if (unlikely(!__pyx_ptype_4sage_5rings_7integer_int_to_Z)) {__pyx_filename = __pyx_f[16]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_5rings_7integer_int_to_Z = (struct __pyx_vtabstruct_4sage_5rings_7integer_int_to_Z*)__Pyx_GetVtable(__pyx_ptype_4sage_5rings_7integer_int_to_Z->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_5rings_7integer_int_to_Z)) {__pyx_filename = __pyx_f[16]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_10parent_old_Parent = __Pyx_ImportType("sage.structure.parent_old", "Parent", sizeof(struct __pyx_obj_4sage_9structure_10parent_old_Parent), 1); if (unlikely(!__pyx_ptype_4sage_9structure_10parent_old_Parent)) {__pyx_filename = __pyx_f[17]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_10parent_old_Parent = (struct __pyx_vtabstruct_4sage_9structure_10parent_old_Parent*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_10parent_old_Parent->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_10parent_old_Parent)) {__pyx_filename = __pyx_f[17]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_11parent_base_ParentWithBase = __Pyx_ImportType("sage.structure.parent_base", "ParentWithBase", sizeof(struct __pyx_obj_4sage_9structure_11parent_base_ParentWithBase), 1); if (unlikely(!__pyx_ptype_4sage_9structure_11parent_base_ParentWithBase)) {__pyx_filename = __pyx_f[18]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_11parent_base_ParentWithBase = (struct __pyx_vtabstruct_4sage_9structure_11parent_base_ParentWithBase*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_11parent_base_ParentWithBase->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_11parent_base_ParentWithBase)) {__pyx_filename = __pyx_f[18]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_11parent_gens_ParentWithGens = __Pyx_ImportType("sage.structure.parent_gens", "ParentWithGens", sizeof(struct __pyx_obj_4sage_9structure_11parent_gens_ParentWithGens), 1); if (unlikely(!__pyx_ptype_4sage_9structure_11parent_gens_ParentWithGens)) {__pyx_filename = __pyx_f[19]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_11parent_gens_ParentWithGens = (struct __pyx_vtabstruct_4sage_9structure_11parent_gens_ParentWithGens*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_11parent_gens_ParentWithGens->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_11parent_gens_ParentWithGens)) {__pyx_filename = __pyx_f[19]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_11parent_gens_ParentWithMultiplicativeAbelianGens = __Pyx_ImportType("sage.structure.parent_gens", "ParentWithMultiplicativeAbelianGens", sizeof(struct __pyx_obj_4sage_9structure_11parent_gens_ParentWithMultiplicativeAbelianGens), 1); if (unlikely(!__pyx_ptype_4sage_9structure_11parent_gens_ParentWithMultiplicativeAbelianGens)) {__pyx_filename = __pyx_f[19]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_11parent_gens_ParentWithMultiplicativeAbelianGens = (struct __pyx_vtabstruct_4sage_9structure_11parent_gens_ParentWithMultiplicativeAbelianGens*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_11parent_gens_ParentWithMultiplicativeAbelianGens->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_11parent_gens_ParentWithMultiplicativeAbelianGens)) {__pyx_filename = __pyx_f[19]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_9structure_11parent_gens_ParentWithAdditiveAbelianGens = __Pyx_ImportType("sage.structure.parent_gens", "ParentWithAdditiveAbelianGens", sizeof(struct __pyx_obj_4sage_9structure_11parent_gens_ParentWithAdditiveAbelianGens), 1); if (unlikely(!__pyx_ptype_4sage_9structure_11parent_gens_ParentWithAdditiveAbelianGens)) {__pyx_filename = __pyx_f[19]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_9structure_11parent_gens_ParentWithAdditiveAbelianGens = (struct __pyx_vtabstruct_4sage_9structure_11parent_gens_ParentWithAdditiveAbelianGens*)__Pyx_GetVtable(__pyx_ptype_4sage_9structure_11parent_gens_ParentWithAdditiveAbelianGens->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_9structure_11parent_gens_ParentWithAdditiveAbelianGens)) {__pyx_filename = __pyx_f[19]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_5rings_4ring_Ring = __Pyx_ImportType("sage.rings.ring", "Ring", sizeof(struct __pyx_obj_4sage_5rings_4ring_Ring), 1); if (unlikely(!__pyx_ptype_4sage_5rings_4ring_Ring)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_5rings_4ring_Ring = (struct __pyx_vtabstruct_4sage_5rings_4ring_Ring*)__Pyx_GetVtable(__pyx_ptype_4sage_5rings_4ring_Ring->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_5rings_4ring_Ring)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_5rings_4ring_CommutativeRing = __Pyx_ImportType("sage.rings.ring", "CommutativeRing", sizeof(struct __pyx_obj_4sage_5rings_4ring_CommutativeRing), 1); if (unlikely(!__pyx_ptype_4sage_5rings_4ring_CommutativeRing)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_5rings_4ring_CommutativeRing = (struct __pyx_vtabstruct_4sage_5rings_4ring_CommutativeRing*)__Pyx_GetVtable(__pyx_ptype_4sage_5rings_4ring_CommutativeRing->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_5rings_4ring_CommutativeRing)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_5rings_4ring_IntegralDomain = __Pyx_ImportType("sage.rings.ring", "IntegralDomain", sizeof(struct __pyx_obj_4sage_5rings_4ring_IntegralDomain), 1); if (unlikely(!__pyx_ptype_4sage_5rings_4ring_IntegralDomain)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_5rings_4ring_IntegralDomain = (struct __pyx_vtabstruct_4sage_5rings_4ring_IntegralDomain*)__Pyx_GetVtable(__pyx_ptype_4sage_5rings_4ring_IntegralDomain->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_5rings_4ring_IntegralDomain)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_5rings_4ring_DedekindDomain = __Pyx_ImportType("sage.rings.ring", "DedekindDomain", sizeof(struct __pyx_obj_4sage_5rings_4ring_DedekindDomain), 1); if (unlikely(!__pyx_ptype_4sage_5rings_4ring_DedekindDomain)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_5rings_4ring_DedekindDomain = (struct __pyx_vtabstruct_4sage_5rings_4ring_DedekindDomain*)__Pyx_GetVtable(__pyx_ptype_4sage_5rings_4ring_DedekindDomain->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_5rings_4ring_DedekindDomain)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_5rings_4ring_PrincipalIdealDomain = __Pyx_ImportType("sage.rings.ring", "PrincipalIdealDomain", sizeof(struct __pyx_obj_4sage_5rings_4ring_PrincipalIdealDomain), 1); if (unlikely(!__pyx_ptype_4sage_5rings_4ring_PrincipalIdealDomain)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_5rings_4ring_PrincipalIdealDomain = (struct __pyx_vtabstruct_4sage_5rings_4ring_PrincipalIdealDomain*)__Pyx_GetVtable(__pyx_ptype_4sage_5rings_4ring_PrincipalIdealDomain->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_5rings_4ring_PrincipalIdealDomain)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_5rings_4ring_EuclideanDomain = __Pyx_ImportType("sage.rings.ring", "EuclideanDomain", sizeof(struct __pyx_obj_4sage_5rings_4ring_EuclideanDomain), 1); if (unlikely(!__pyx_ptype_4sage_5rings_4ring_EuclideanDomain)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_5rings_4ring_EuclideanDomain = (struct __pyx_vtabstruct_4sage_5rings_4ring_EuclideanDomain*)__Pyx_GetVtable(__pyx_ptype_4sage_5rings_4ring_EuclideanDomain->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_5rings_4ring_EuclideanDomain)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_5rings_4ring_Field = __Pyx_ImportType("sage.rings.ring", "Field", sizeof(struct __pyx_obj_4sage_5rings_4ring_Field), 1); if (unlikely(!__pyx_ptype_4sage_5rings_4ring_Field)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_5rings_4ring_Field = (struct __pyx_vtabstruct_4sage_5rings_4ring_Field*)__Pyx_GetVtable(__pyx_ptype_4sage_5rings_4ring_Field->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_5rings_4ring_Field)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_5rings_4ring_Algebra = __Pyx_ImportType("sage.rings.ring", "Algebra", sizeof(struct __pyx_obj_4sage_5rings_4ring_Algebra), 1); if (unlikely(!__pyx_ptype_4sage_5rings_4ring_Algebra)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_5rings_4ring_Algebra = (struct __pyx_vtabstruct_4sage_5rings_4ring_Algebra*)__Pyx_GetVtable(__pyx_ptype_4sage_5rings_4ring_Algebra->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_5rings_4ring_Algebra)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_5rings_4ring_CommutativeAlgebra = __Pyx_ImportType("sage.rings.ring", "CommutativeAlgebra", sizeof(struct __pyx_obj_4sage_5rings_4ring_CommutativeAlgebra), 1); if (unlikely(!__pyx_ptype_4sage_5rings_4ring_CommutativeAlgebra)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_5rings_4ring_CommutativeAlgebra = (struct __pyx_vtabstruct_4sage_5rings_4ring_CommutativeAlgebra*)__Pyx_GetVtable(__pyx_ptype_4sage_5rings_4ring_CommutativeAlgebra->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_5rings_4ring_CommutativeAlgebra)) {__pyx_filename = __pyx_f[20]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sage_5rings_12integer_ring_IntegerRing_class = __Pyx_ImportType("sage.rings.integer_ring", "IntegerRing_class", sizeof(struct __pyx_obj_4sage_5rings_12integer_ring_IntegerRing_class), 1); if (unlikely(!__pyx_ptype_4sage_5rings_12integer_ring_IntegerRing_class)) {__pyx_filename = __pyx_f[21]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_4sage_5rings_12integer_ring_IntegerRing_class = (struct __pyx_vtabstruct_4sage_5rings_12integer_ring_IntegerRing_class*)__Pyx_GetVtable(__pyx_ptype_4sage_5rings_12integer_ring_IntegerRing_class->tp_dict); if (unlikely(!__pyx_vtabptr_4sage_5rings_12integer_ring_IntegerRing_class)) {__pyx_filename = __pyx_f[21]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "matrix_ebb_dense.pyx":30
 * 
 * from sage.rings.integer cimport Integer
 * from sage.rings.rational_field import QQ             # <<<<<<<<<<<<<<
 * from sage.rings.real_double import RDF
 * from sage.rings.integer_ring import ZZ, IntegerRing_class
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__QQ));
  PyList_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s__QQ));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__QQ));
  __pyx_t_2 = __Pyx_Import(((PyObject *)__pyx_n_s_14), ((PyObject *)__pyx_t_1), -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s__QQ); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__QQ, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "matrix_ebb_dense.pyx":31
 * from sage.rings.integer cimport Integer
 * from sage.rings.rational_field import QQ
 * from sage.rings.real_double import RDF             # <<<<<<<<<<<<<<
 * from sage.rings.integer_ring import ZZ, IntegerRing_class
 * from sage.rings.integer_ring cimport IntegerRing_class
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__RDF));
  PyList_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_n_s__RDF));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__RDF));
  __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s_15), ((PyObject *)__pyx_t_2), -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s__RDF); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__RDF, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "matrix_ebb_dense.pyx":32
 * from sage.rings.rational_field import QQ
 * from sage.rings.real_double import RDF
 * from sage.rings.integer_ring import ZZ, IntegerRing_class             # <<<<<<<<<<<<<<
 * from sage.rings.integer_ring cimport IntegerRing_class
 * 
 */
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__ZZ));
  PyList_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s__ZZ));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__ZZ));
  __Pyx_INCREF(((PyObject *)__pyx_n_s__IntegerRing_class));
  PyList_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_n_s__IntegerRing_class));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__IntegerRing_class));
  __pyx_t_2 = __Pyx_Import(((PyObject *)__pyx_n_s_16), ((PyObject *)__pyx_t_1), -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s__ZZ); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__ZZ, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "matrix_ebb_dense.pyx":1
 * # distutils: language = c++             # <<<<<<<<<<<<<<
 * # distutils: sources = Rectangle.cpp
 * 
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  if (PyDict_SetItem(__pyx_d, __pyx_n_s____test__, ((PyObject *)__pyx_t_2)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    __Pyx_AddTraceback("init matrix_ebb_dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init matrix_ebb_dense");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif /* CYTHON_REFNANNY */

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%s() takes %s %" CYTHON_FORMAT_SSIZE_T "d positional argument%s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (result) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    #if PY_VERSION_HEX < 0x02050000
    if (PyClass_Check(type)) {
    #else
    if (PyType_Check(type)) {
    #endif
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        #if PY_VERSION_HEX < 0x02050000
        if (PyInstance_Check(type)) {
            type = (PyObject*) ((PyInstanceObject*)type)->in_class;
            Py_INCREF(type);
        } else {
            type = 0;
            PyErr_SetString(PyExc_TypeError,
                "raise: exception must be an old-style class or instance");
            goto raise_error;
        }
        #else
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
        #endif
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else /* Python 3+ */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *args;
        if (!value)
            args = PyTuple_New(0);
        else if (PyTuple_Check(value)) {
            Py_INCREF(value);
            args = value;
        } else
            args = PyTuple_Pack(1, value);
        if (!args)
            goto bad;
        owned_instance = PyEval_CallObject(type, args);
        Py_DECREF(args);
        if (!owned_instance)
            goto bad;
        value = owned_instance;
        if (!PyExceptionInstance_Check(value)) {
            PyErr_Format(PyExc_TypeError,
                         "calling %R should have returned an instance of "
                         "BaseException, not %R",
                         type, Py_TYPE(value));
            goto bad;
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (!type) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (Py_TYPE(obj) == type) return 1;
    }
    else {
        if (PyObject_TypeCheck(obj, type)) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%s' has incorrect type (expected %s, got %s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_dealloc != current_tp_dealloc)
        type = type->tp_base;
    while (type && type->tp_dealloc == current_tp_dealloc)
        type = type->tp_base;
    if (type)
        type->tp_dealloc(obj);
}

static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_traverse != current_tp_traverse)
        type = type->tp_base;
    while (type && type->tp_traverse == current_tp_traverse)
        type = type->tp_base;
    if (type && type->tp_traverse)
        return type->tp_traverse(obj, v, a);
    return 0;
}

static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_clear != current_tp_clear)
        type = type->tp_base;
    while (type && type->tp_clear == current_tp_clear)
        type = type->tp_base;
    if (type && type->tp_clear)
        type->tp_clear(obj);
}

static void* __Pyx_GetVtable(PyObject *dict) {
    void* ptr;
    PyObject *ob = PyObject_GetItem(dict, __pyx_n_s____pyx_vtable__);
    if (!ob)
        goto bad;
#if PY_VERSION_HEX >= 0x02070000 && !(PY_MAJOR_VERSION==3&&PY_MINOR_VERSION==0)
    ptr = PyCapsule_GetPointer(ob, 0);
#else
    ptr = PyCObject_AsVoidPtr(ob);
#endif
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000 && !(PY_MAJOR_VERSION==3&&PY_MINOR_VERSION==0)
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s____pyx_vtable__, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s____import__);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    #if PY_VERSION_HEX >= 0x02050000
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0; /* try absolute import on failure */
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
    #else
    if (level>0) {
        PyErr_SetString(PyExc_RuntimeError, "Relative import is not supported for Python <=2.4.");
        goto bad;
    }
    module = PyObject_CallFunctionObjArgs(py_import,
        name, global_dict, empty_dict, list, NULL);
    #endif
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject* x) {
    const unsigned char neg_one = (unsigned char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned char" :
                    "value too large to convert to unsigned char");
            }
            return (unsigned char)-1;
        }
        return (unsigned char)val;
    }
    return (unsigned char)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject* x) {
    const unsigned short neg_one = (unsigned short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned short" :
                    "value too large to convert to unsigned short");
            }
            return (unsigned short)-1;
        }
        return (unsigned short)val;
    }
    return (unsigned short)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject* x) {
    const unsigned int neg_one = (unsigned int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned int" :
                    "value too large to convert to unsigned int");
            }
            return (unsigned int)-1;
        }
        return (unsigned int)val;
    }
    return (unsigned int)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {
    const char neg_one = (char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to char" :
                    "value too large to convert to char");
            }
            return (char)-1;
        }
        return (char)val;
    }
    return (char)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {
    const short neg_one = (short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to short" :
                    "value too large to convert to short");
            }
            return (short)-1;
        }
        return (short)val;
    }
    return (short)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject* x) {
    const signed char neg_one = (signed char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed char" :
                    "value too large to convert to signed char");
            }
            return (signed char)-1;
        }
        return (signed char)val;
    }
    return (signed char)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject* x) {
    const signed short neg_one = (signed short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed short" :
                    "value too large to convert to signed short");
            }
            return (signed short)-1;
        }
        return (signed short)val;
    }
    return (signed short)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject* x) {
    const signed int neg_one = (signed int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed int" :
                    "value too large to convert to signed int");
            }
            return (signed int)-1;
        }
        return (signed int)val;
    }
    return (signed int)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) {
    const unsigned long neg_one = (unsigned long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return (unsigned long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (unsigned long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned long");
                return (unsigned long)-1;
            }
            return (unsigned long)PyLong_AsUnsignedLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(unsigned long) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(unsigned long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (unsigned long)PyLong_AsLong(x);
        }
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned long)-1;
        val = __Pyx_PyInt_AsUnsignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return (unsigned PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (unsigned PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned PY_LONG_LONG");
                return (unsigned PY_LONG_LONG)-1;
            }
            return (unsigned PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(unsigned PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(unsigned PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (unsigned PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) {
    const long neg_one = (long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to long");
            return (long)-1;
        }
        return (long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long)-1;
            }
            return (long)PyLong_AsUnsignedLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(long) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (long)PyLong_AsLong(x);
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long)-1;
        val = __Pyx_PyInt_AsLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {
    const PY_LONG_LONG neg_one = (PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to PY_LONG_LONG");
            return (PY_LONG_LONG)-1;
        }
        return (PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to PY_LONG_LONG");
                return (PY_LONG_LONG)-1;
            }
            return (PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) {
    const signed long neg_one = (signed long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed long");
            return (signed long)-1;
        }
        return (signed long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (signed long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed long");
                return (signed long)-1;
            }
            return (signed long)PyLong_AsUnsignedLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(signed long) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(signed long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (signed long)PyLong_AsLong(x);
        }
    } else {
        signed long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed long)-1;
        val = __Pyx_PyInt_AsSignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject* x) {
    const signed PY_LONG_LONG neg_one = (signed PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed PY_LONG_LONG");
            return (signed PY_LONG_LONG)-1;
        }
        return (signed PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (signed PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed PY_LONG_LONG");
                return (signed PY_LONG_LONG)-1;
            }
            return (signed PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(signed PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(signed PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (signed PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        signed PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsSignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        #if PY_VERSION_HEX < 0x02050000
        return PyErr_Warn(NULL, message);
        #else
        return PyErr_WarnEx(NULL, message, 1);
        #endif
    }
    return 0;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%s.%s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        #if PY_VERSION_HEX < 0x02050000
        if (PyErr_Warn(NULL, warning) < 0) goto bad;
        #else
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
        #endif
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%s.%s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,            /*int argcount,*/
        0,            /*int kwonlyargcount,*/
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,      /*int firstlineno,*/
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_globals = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif /*__PYX_DEFAULT_STRING_ENCODING_IS_ASCII*/
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else /* PY_VERSION_HEX < 0x03030000 */
        if (PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_DATA_SIZE(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else /* __PYX_DEFAULT_STRING_ENCODING_IS_ASCII */
        return PyUnicode_AsUTF8AndSize(o, length);
#endif /* __PYX_DEFAULT_STRING_ENCODING_IS_ASCII */
#endif /* PY_VERSION_HEX < 0x03030000 */
    } else
#endif /* __PYX_DEFAULT_STRING_ENCODING_IS_ASCII  || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT */
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (r < 0) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%s__ returned non-%s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {
   unsigned PY_LONG_LONG val = __Pyx_PyInt_AsUnsignedLongLong(x);
   if (unlikely(val != (unsigned PY_LONG_LONG)(size_t)val)) {
       if ((val != (unsigned PY_LONG_LONG)-1) || !PyErr_Occurred())
           PyErr_SetString(PyExc_OverflowError,
                           "value too large to convert to size_t");
       return (size_t)-1;
   }
   return (size_t)val;
}


#endif /* Py_PYTHON_H */
